{"version":3,"file":"ExtendLease-3349a7d7.js","sources":["../../src/components/layout/ExtendLease/ExtendLease.tsx"],"sourcesContent":["import { AoArNSNameData, isLeasedArNSRecord, mIOToken } from '@ar.io/sdk/web';\nimport WarningCard from '@src/components/cards/WarningCard/WarningCard';\nimport { getTransactionDescription } from '@src/components/pages/Transaction/transaction-descriptions';\nimport Lottie from 'lottie-react';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { ArweaveTransactionID } from '../../../services/arweave/ArweaveTransactionID';\nimport { useGlobalState } from '../../../state/contexts/GlobalState';\nimport { useTransactionState } from '../../../state/contexts/TransactionState';\nimport { useWalletState } from '../../../state/contexts/WalletState';\nimport {\n  ARNS_INTERACTION_TYPES,\n  ExtendLeasePayload,\n  TRANSACTION_TYPES,\n} from '../../../types';\nimport {\n  formatDate,\n  getLeaseDurationFromEndTimestamp,\n  lowerCaseDomain,\n  sleep,\n} from '../../../utils';\nimport {\n  MAX_LEASE_DURATION,\n  MIN_LEASE_DURATION,\n  YEAR_IN_MILLISECONDS,\n} from '../../../utils/constants';\nimport eventEmitter from '../../../utils/events';\nimport { InfoIcon } from '../../icons';\nimport arioLoading from '../../icons/ario-spinner.json';\nimport Counter from '../../inputs/Counter/Counter';\nimport WorkflowButtons from '../../inputs/buttons/WorkflowButtons/WorkflowButtons';\nimport DialogModal from '../../modals/DialogModal/DialogModal';\nimport TransactionCost from '../TransactionCost/TransactionCost';\nimport PageLoader from '../progress/PageLoader/PageLoader';\n\nfunction ExtendLease() {\n  // TODO: remove use of source contract\n  const [{ ioTicker, arioContract, ioProcessId }] = useGlobalState();\n  const [{ walletAddress }] = useWalletState();\n  const [, dispatchTransactionState] = useTransactionState();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const name = location.pathname.split('/').at(-2);\n  const [record, setRecord] = useState<AoArNSNameData>();\n  const [registrationType, setRegistrationType] = useState<TRANSACTION_TYPES>();\n  const [newLeaseDuration, setNewLeaseDuration] = useState<number>(1);\n  const [maxIncrease, setMaxIncrease] = useState<number>(0);\n  const [ioFee, setIoFee] = useState<number | undefined>();\n  const [ioBalance, setIoBalance] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!name) {\n      navigate(`/manage/names`);\n      return;\n    }\n    onLoad(lowerCaseDomain(name));\n  }, [name]);\n\n  useEffect(() => {\n    if (!record || !name || !isLeasedArNSRecord(record)) {\n      return;\n    }\n\n    setIoFee(undefined);\n    const updateIoFee = async () => {\n      const price = await arioContract\n        .getTokenCost({\n          intent: 'Extend-Lease',\n          name: name,\n          years: newLeaseDuration,\n        })\n        .then((p) => new mIOToken(p).toIO().valueOf());\n      setIoFee(price);\n    };\n    updateIoFee();\n  }, [newLeaseDuration, maxIncrease, record, name]);\n\n  async function onLoad(domain: string) {\n    try {\n      setLoading(true);\n      // TODO: make this generic so we get back the correct type\n\n      const domainRecord = await arioContract.getArNSRecord({\n        name: lowerCaseDomain(domain),\n      });\n      if (!domainRecord) {\n        throw new Error(`Unable to get record for ${domain}`);\n      }\n      setRegistrationType(domainRecord.type as TRANSACTION_TYPES);\n      setRecord(domainRecord);\n\n      if (!isLeasedArNSRecord(domainRecord)) {\n        setRegistrationType(TRANSACTION_TYPES.BUY);\n        return;\n      }\n\n      if (!walletAddress) {\n        // TODO: navigate to connect\n        throw new Error('Wallet address not found');\n      }\n\n      const balance = await arioContract.getBalance({\n        address: walletAddress.toString(),\n      });\n      setIoBalance(balance ?? 0);\n\n      setMaxIncrease(\n        Math.max(\n          0,\n          MAX_LEASE_DURATION -\n            getLeaseDurationFromEndTimestamp(\n              domainRecord.startTimestamp,\n              domainRecord.endTimestamp,\n            ),\n        ),\n      );\n    } catch (error) {\n      eventEmitter.emit('error', error);\n      // sleep 2000 to make page transition less jarring\n      await sleep(2000);\n      navigate(`/manage/names`);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  if (!record || !name) {\n    return (\n      <PageLoader loading={!record} message={`Loading info for ${name}`} />\n    );\n  }\n\n  if (\n    !isLeasedArNSRecord(record) ||\n    registrationType === TRANSACTION_TYPES.BUY\n  ) {\n    return (\n      <div className=\"page center\">\n        <DialogModal\n          showClose={false}\n          cancelText=\"Manage\"\n          body={\n            <span\n              className=\"flex flex-column white center\"\n              style={{\n                height: '100%',\n              }}\n            >\n              This domain is permanently registered and its lease cannot be\n              extended.\n            </span>\n          }\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"page center\">\n      <div className=\"flex flex-column\" style={{ maxWidth: '1000px' }}>\n        <div\n          className=\"flex flex-row center\"\n          style={{ justifyContent: 'space-between' }}\n        >\n          <h1 className=\"white text-[2rem]\">Extend Lease</h1>\n\n          <div\n            className=\"flex flex-row center white\"\n            style={{\n              border: 'solid 1px var(--text-faded)',\n              borderRadius: 'var(--corner-radius)',\n              gap: '8px',\n              width: 'fit-content',\n              padding: '12px',\n            }}\n          >\n            <InfoIcon width={'22px'} height={'22px'} fill=\"var(--text-grey)\" />\n            Expiring on {formatDate(record.endTimestamp)}\n          </div>\n        </div>\n        <div className=\"flex flex-col relative p-[30px] w-full h-full bg-foreground box-border rounded-md \">\n          {/* loading overlay */}\n          {loading && (\n            <div className=\"flex flex-col items-center justify-center rounded-md bg-foreground h-full w-full absolute top-0 left-0\">\n              <div className=\"flex flex-row items-center justify-center\">\n                <Lottie\n                  animationData={arioLoading}\n                  loop={true}\n                  className=\"h-[150px]\"\n                />\n              </div>\n            </div>\n          )}\n          {/* maxxed out duration overlay */}\n          {!loading && maxIncrease < 1 && (\n            <div className=\"flex flex-col center  rounded-md  bg-[rgb(0,0,0,0.5)] h-full w-full absolute top-0 left-0\">\n              <div className=\"flex flex-row items-center justify-center max-w-fit h-fit rounded-md border border-error text-white bg-foreground p-6 gap-2\">\n                {' '}\n                <InfoIcon\n                  width={'24px'}\n                  height={'24px'}\n                  fill=\"var(--error-red)\"\n                />\n                <span className=\"center\">Maximum lease extension reached</span>\n              </div>\n            </div>\n          )}\n          <Counter\n            setValue={setNewLeaseDuration}\n            value={newLeaseDuration}\n            maxValue={maxIncrease}\n            minValue={MIN_LEASE_DURATION}\n            valueName={newLeaseDuration > 1 ? 'years' : 'year'}\n            valueStyle={{ padding: '10px 80px' }}\n            detail={\n              <span>\n                until{' '}\n                {formatDate(\n                  record.endTimestamp + newLeaseDuration * YEAR_IN_MILLISECONDS,\n                )}\n              </span>\n            }\n            title={\n              <span\n                className=\"white\"\n                style={{ padding: '0px 10px 10px 10px', fontWeight: '500' }}\n              >{`Extension Duration ( up to ${Math.max(1, maxIncrease)} year${\n                maxIncrease > 1 ? 's' : ''\n              } )`}</span>\n            }\n          />\n        </div>\n        {/* TODO: [PE-4563] implement contract read api for extend record */}\n        <TransactionCost\n          feeWrapperStyle={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%',\n          }}\n          fee={{\n            [ioTicker]: ioFee,\n          }}\n          ioRequired={true}\n          info={\n            <div>\n              <WarningCard\n                wrapperStyle={{\n                  padding: '10px',\n                  fontSize: '14px',\n                  alignItems: 'center',\n                }}\n                customIcon={<InfoIcon width={'20px'} fill={'var(--accent)'} />}\n                text={\n                  getTransactionDescription({\n                    workflowName: ARNS_INTERACTION_TYPES.EXTEND_LEASE,\n                    ioTicker,\n                  }) || ''\n                }\n              />\n            </div>\n          }\n        />\n        <WorkflowButtons\n          backText=\"Cancel\"\n          nextText=\"Continue\"\n          customNextStyle={{\n            background: maxIncrease < 1 && 'var(--text-grey)',\n            color: maxIncrease < 1 && 'var(--text-white)',\n          }}\n          onBack={() => {\n            navigate(`/manage/names/${lowerCaseDomain(name)}`);\n          }}\n          onNext={\n            !ioFee || ioFee < 0\n              ? undefined\n              : maxIncrease >= 1 || ioFee <= ioBalance\n              ? () => {\n                  const payload: ExtendLeasePayload = {\n                    name,\n                    years: newLeaseDuration,\n                    processId: new ArweaveTransactionID(record.processId),\n                    qty: ioFee,\n                  };\n\n                  dispatchTransactionState({\n                    type: 'setInteractionType',\n                    payload: ARNS_INTERACTION_TYPES.EXTEND_LEASE,\n                  });\n                  dispatchTransactionState({\n                    type: 'setTransactionData',\n                    payload: {\n                      assetId: ioProcessId,\n                      functionName: 'extendRecord',\n                      ...payload,\n                      arnsRecord: record,\n                      interactionPrice: ioFee,\n                    },\n                  });\n                  dispatchTransactionState({\n                    type: 'setWorkflowName',\n                    payload: ARNS_INTERACTION_TYPES.EXTEND_LEASE,\n                  });\n                  navigate('/transaction/review', {\n                    state: `/manage/names/${lowerCaseDomain(name)}/extend`,\n                  });\n                }\n              : undefined\n          }\n          detail={\n            ioFee && ioFee > ioBalance && maxIncrease > 0 ? (\n              <div\n                className=\"flex flex-row center\"\n                style={{\n                  width: 'fit-content',\n                  height: 'fit-content',\n                  borderRadius: 'var(--corner-radius)',\n                  border: 'solid 1px var(--error-red)',\n                  background: '#1D1314',\n                  padding: '8px',\n                  boxSizing: 'border-box',\n                  color: 'var(--error-red)',\n                  gap: '10px',\n                  whiteSpace: 'nowrap',\n                  fontSize: '13px',\n                }}\n              >\n                {' '}\n                <InfoIcon\n                  width={'24px'}\n                  height={'24px'}\n                  fill=\"var(--error-red)\"\n                />\n                <span className=\"center\">Insufficient funds.</span>\n              </div>\n            ) : (\n              <></>\n            )\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ExtendLease;\n"],"names":["ExtendLease","ioTicker","arioContract","ioProcessId","useGlobalState","walletAddress","useWalletState","dispatchTransactionState","useTransactionState","location","useLocation","navigate","useNavigate","name","record","setRecord","reactExports","registrationType","setRegistrationType","newLeaseDuration","setNewLeaseDuration","maxIncrease","setMaxIncrease","ioFee","setIoFee","ioBalance","setIoBalance","loading","setLoading","onLoad","lowerCaseDomain","isLeasedArNSRecord","price","p","mIOToken","domain","domainRecord","TRANSACTION_TYPES","balance","MAX_LEASE_DURATION","getLeaseDurationFromEndTimestamp","error","eventEmitter","sleep","jsxRuntimeExports","PageLoader","DialogModal","SvgInfo","formatDate","Lottie","arioLoading","Counter","MIN_LEASE_DURATION","YEAR_IN_MILLISECONDS","TransactionCost","WarningCard","getTransactionDescription","ARNS_INTERACTION_TYPES","WorkflowButtons","payload","ArweaveTransactionID"],"mappings":"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"}