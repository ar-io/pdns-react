{"version":3,"file":"TransactionReview-d4c32912.js","sources":["../../src/components/pages/Transaction/transaction-headers.tsx","../../src/components/pages/Transaction/TransactionReview.tsx"],"sourcesContent":["import { ANT_INTERACTION_TYPES, ARNS_INTERACTION_TYPES } from '@src/types';\n\nexport function getTransactionHeader({\n  workflowName,\n  ...params // eslint-disable-line @typescript-eslint/no-unused-vars\n}: {\n  workflowName: ARNS_INTERACTION_TYPES | ANT_INTERACTION_TYPES;\n} & Record<string, any>) {\n  switch (workflowName) {\n    case ARNS_INTERACTION_TYPES.INCREASE_UNDERNAMES:\n    case ARNS_INTERACTION_TYPES.EXTEND_LEASE:\n      return (\n        <h1\n          className=\"flex white text-[2rem]\"\n          style={{ width: '100%', paddingBottom: '30px' }}\n        >\n          Review\n        </h1>\n      );\n    case ARNS_INTERACTION_TYPES.UPGRADE_NAME:\n    case ARNS_INTERACTION_TYPES.BUY_RECORD:\n      return `Review your Purchase`;\n    default:\n      return undefined;\n  }\n}\n","import { ARIOWriteable, AoARIOWrite } from '@ar.io/sdk/web';\nimport { ANTCard } from '@src/components/cards';\nimport WarningCard from '@src/components/cards/WarningCard/WarningCard';\nimport { InfoIcon } from '@src/components/icons';\nimport WorkflowButtons from '@src/components/inputs/buttons/WorkflowButtons/WorkflowButtons';\nimport TransactionCost from '@src/components/layout/TransactionCost/TransactionCost';\nimport { StepProgressBar } from '@src/components/layout/progress';\nimport PageLoader from '@src/components/layout/progress/PageLoader/PageLoader';\nimport { useIsMobile } from '@src/hooks';\nimport { dispatchArNSUpdate, useArNSState } from '@src/state';\nimport dispatchArIOInteraction from '@src/state/actions/dispatchArIOInteraction';\nimport { useGlobalState } from '@src/state/contexts/GlobalState';\nimport { useTransactionState } from '@src/state/contexts/TransactionState';\nimport { useWalletState } from '@src/state/contexts/WalletState';\nimport {\n  ARNSMapping,\n  ARNS_INTERACTION_TYPES,\n  TransactionData,\n  ValidInteractionType,\n} from '@src/types';\nimport {\n  getARNSMappingByInteractionType,\n  getWorkflowStepsForInteraction,\n} from '@src/utils';\nimport eventEmitter from '@src/utils/events';\nimport { StepProps } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { getTransactionDescription } from './transaction-descriptions';\nimport { getTransactionHeader } from './transaction-headers';\n\n// page on route transaction/review\n// on completion routes to transaction/complete\nfunction TransactionReview() {\n  const navigate = useNavigate();\n  const [{ arioTicker, arioContract, arioProcessId, aoNetwork, aoClient }] =\n    useGlobalState();\n  const [{ arnsEmitter }, dispatchArNSState] = useArNSState();\n  const [{ walletAddress, wallet }] = useWalletState();\n  const [\n    { workflowName, interactionType, transactionData, interactionResult },\n    dispatchTransactionState,\n  ] = useTransactionState();\n  const isMobile = useIsMobile();\n  const [antProps, setAntProps] = useState<ARNSMapping>();\n  const [steps, setSteps] = useState<StepProps[] | undefined>(\n    getWorkflowStepsForInteraction(interactionType),\n  );\n  const [header, setHeader] = useState<string | JSX.Element | undefined>(\n    getTransactionHeader({\n      workflowName: workflowName as ARNS_INTERACTION_TYPES,\n    }),\n  );\n  const [transactionDescription, setTransactionDescription] = useState(\n    getTransactionDescription({\n      workflowName: workflowName as ARNS_INTERACTION_TYPES,\n      arioTicker,\n    }),\n  );\n\n  useEffect(() => {\n    if (!transactionData && !workflowName) {\n      navigate('/');\n      return;\n    }\n    setAntProps(\n      getARNSMappingByInteractionType({\n        interactionType: interactionType as ValidInteractionType,\n        transactionData: {\n          ...transactionData,\n          deployedTransactionId: interactionResult?.id,\n        } as any as TransactionData,\n      }) as ARNSMapping,\n    );\n    setTransactionDescription(\n      getTransactionDescription({\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n        arioTicker,\n      }),\n    );\n    setSteps(getWorkflowStepsForInteraction(interactionType));\n    setHeader(\n      getTransactionHeader({\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n      }),\n    );\n  }, [\n    transactionData,\n    interactionResult,\n    workflowName,\n    interactionType,\n    walletAddress,\n  ]);\n\n  useEffect(() => {\n    if (interactionResult?.id) {\n      navigate('/transaction/complete');\n    }\n  }, [interactionResult, navigate]);\n\n  async function handleNext() {\n    try {\n      if (!(arioContract instanceof ARIOWriteable)) {\n        throw new Error('Wallet must be connected to dispatch transactions.');\n      }\n      if (!transactionData || !workflowName) {\n        throw new Error('Transaction data is missing');\n      }\n\n      if (!walletAddress) {\n        throw new Error('Wallet address is missing');\n      }\n      // TODO: check that it's connected\n      await dispatchArIOInteraction({\n        arioContract: arioContract as AoARIOWrite,\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n        payload: transactionData,\n        owner: walletAddress,\n        processId: arioProcessId,\n        dispatch: dispatchTransactionState,\n        signer: wallet?.contractSigner,\n        ao: aoClient,\n        scheduler: aoNetwork.SCHEDULER,\n      });\n    } catch (error) {\n      eventEmitter.emit('error', error);\n    } finally {\n      if (walletAddress) {\n        dispatchArNSUpdate({\n          ao: aoClient,\n          emitter: arnsEmitter,\n          dispatch: dispatchArNSState,\n          arioProcessId,\n          walletAddress,\n        });\n      }\n    }\n  }\n\n  if (!antProps) {\n    return (\n      <PageLoader loading={true} message={'Loading transaction data...'} />\n    );\n  }\n\n  return (\n    <div className=\"page\">\n      <div\n        className=\"flex flex-column center\"\n        style={isMobile ? {} : { gap: '0px', maxWidth: '900px', width: '100%' }}\n      >\n        {steps && steps.length ? (\n          <div\n            className=\"flex flex-row\"\n            style={{\n              marginBottom: '20px',\n              width: '100%',\n            }}\n          >\n            <StepProgressBar stage={3} stages={steps} />\n          </div>\n        ) : (\n          <></>\n        )}\n\n        {typeof header === 'string' ? (\n          <div\n            className=\"flex flex-row text-large white bold center\"\n            style={{\n              height: '100%',\n              padding: '50px 0px',\n              borderTop: steps?.length ? 'solid 1px var(--text-faded)' : '',\n            }}\n          >\n            {header}\n          </div>\n        ) : (\n          header\n        )}\n        <ANTCard\n          {...antProps}\n          bordered\n          compact={true}\n          overrides={{\n            ...antProps.overrides,\n            targetId: (transactionData as any)?.targetId?.toString(),\n          }}\n        />\n        <TransactionCost\n          feeWrapperStyle={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%',\n          }}\n          fee={{\n            [arioTicker]: transactionData?.interactionPrice,\n          }}\n          info={\n            transactionDescription && (\n              <div>\n                <WarningCard\n                  wrapperStyle={{\n                    padding: '10px',\n                    fontSize: '14px',\n                    alignItems: 'center',\n                  }}\n                  customIcon={\n                    <InfoIcon width={'20px'} fill={'var(--accent)'} />\n                  }\n                  text={transactionDescription}\n                />\n              </div>\n            )\n          }\n        />\n        <div\n          className=\"flex\"\n          style={{\n            marginTop: 20,\n            width: '100%',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <WorkflowButtons\n            onNext={() => handleNext()}\n            onBack={() => navigate(-1)}\n            backText={'Back'}\n            nextText={'Confirm'}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TransactionReview;\n"],"names":["getTransactionHeader","workflowName","params","ARNS_INTERACTION_TYPES","jsxRuntimeExports","TransactionReview","navigate","useNavigate","arioTicker","arioContract","arioProcessId","aoNetwork","aoClient","useGlobalState","arnsEmitter","dispatchArNSState","useArNSState","walletAddress","wallet","useWalletState","interactionType","transactionData","interactionResult","dispatchTransactionState","useTransactionState","isMobile","useIsMobile","antProps","setAntProps","reactExports","steps","setSteps","getWorkflowStepsForInteraction","header","setHeader","transactionDescription","setTransactionDescription","getTransactionDescription","getARNSMappingByInteractionType","handleNext","ARIOWriteable","dispatchArIOInteraction","error","eventEmitter","dispatchArNSUpdate","StepProgressBar","ANTCard","_a","TransactionCost","WarningCard","SvgInfo","WorkflowButtons","PageLoader"],"mappings":"otBAEA,SAAAA,EAAA,CAAA,aAAAC,EACA,GAAAC,CAEA,EAAA,CAGA,OAAAD,EAAA,CAAA,KAAAE,EAAA,oBACA,KAAAA,EAAA,aAEA,OAAAC,EAAA,IACA,KAAA,CAAA,UAAA,yBACA,MAAA,CAAA,MAAA,OAAA,cAAA,MAAA,EACA,SAAA,QACA,CAAA,EAEA,KAAAD,EAAA,aAEA,KAAAA,EAAA,WAEA,MAAA,uBAAA,QAEA,MAAA,CAEA,CCSA,SAAAE,IAAA,OACA,MAAAC,EAAAC,EAAA,EACA,CAAA,CAAA,WAAAC,EAAA,aAAAC,EAAA,cAAAC,EAAA,UAAAC,EAAA,SAAAC,CAAA,CAAA,EAAAC,EAAA,EAEA,CAAA,CAAA,YAAAC,CAAA,EAAAC,CAAA,EAAAC,EAAA,EACA,CAAA,CAAA,cAAAC,EAAA,OAAAC,CAAA,CAAA,EAAAC,EAAA,EACA,CAAA,CAAA,aAAAlB,EAAA,gBAAAmB,EAAA,gBAAAC,EAAA,kBAAAC,CAAA,EACAC,CACA,EAAAC,EAAA,EAEAC,EAAAC,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAAG,EAAAZ,CAAA,CACA,EAEA,CAAAa,EAAAC,CAAA,EAAAL,EAAA,SAAA7B,EAAA,CACA,aAAAC,CACA,CAAA,CACA,EAEA,CAAAkC,EAAAC,CAAA,EAAAP,EAAA,SAAAQ,EAAA,CACA,aAAApC,EACA,WAAAO,CACA,CAAA,CACA,EAGAqB,EAAA,UAAA,IAAA,CACA,GAAA,CAAAR,GAAA,CAAApB,EAAA,CACAK,EAAA,GAAA,EACA,MAAA,CAEAsB,EAAAU,EAAA,CACA,gBAAAlB,EACA,gBAAA,CACA,GAAAC,EACA,sBAAAC,GAAA,YAAAA,EAAA,EACA,CACA,CAAA,CACA,EAEAc,EAAAC,EAAA,CACA,aAAApC,EACA,WAAAO,CACA,CAAA,CACA,EAEAuB,EAAAC,EAAAZ,CAAA,CAAA,EACAc,EAAAlC,EAAA,CACA,aAAAC,CACA,CAAA,CACA,CACA,EAAA,CACAoB,EACAC,EACArB,EACAmB,EACAH,CACA,CAAA,EAGAY,EAAA,UAAA,IAAA,CACAP,GAAA,MAAAA,EAAA,IACAhB,EAAA,uBAAA,CACA,EAAA,CAAAgB,EAAAhB,CAAA,CAAA,EAGA,eAAAiC,GAAA,CACA,GAAA,CACA,GAAA,EAAA9B,aAAA+B,GACA,MAAA,IAAA,MAAA,oDAAA,EAEA,GAAA,CAAAnB,GAAA,CAAApB,EACA,MAAA,IAAA,MAAA,6BAAA,EAGA,GAAA,CAAAgB,EACA,MAAA,IAAA,MAAA,2BAAA,EAGA,MAAAwB,EAAA,CAAA,aAAAhC,EACA,aAAAR,EACA,QAAAoB,EACA,MAAAJ,EACA,UAAAP,EACA,SAAAa,EACA,OAAAL,GAAA,YAAAA,EAAA,eACA,GAAAN,EACA,UAAAD,EAAA,SACA,CAAA,CACA,OAAA+B,EAAA,CAEAC,EAAA,KAAA,QAAAD,CAAA,CAAA,QAAA,CAEAzB,GACA2B,EAAA,CAAA,GAAAhC,EACA,QAAAE,EACA,SAAAC,EACA,cAAAL,EACA,cAAAO,CACA,CAAA,CAEA,CACA,CAGA,OAAAU,EAMAvB,EAAA,IAAA,MAAA,CAAA,UAAA,OAAA,SAAAA,EAAA,KAEA,MAAA,CAAA,UAAA,0BACA,MAAAqB,EAAA,CAAA,EAAA,CAAA,IAAA,MAAA,SAAA,QAAA,MAAA,MAAA,EACA,SAAA,CAEAK,GAAAA,EAAA,OAAA1B,EAAA,IACA,MAAA,CAAA,UAAA,gBACA,MAAA,CACA,aAAA,OACA,MAAA,MACA,EACA,SAAAA,EAAA,IAAAyC,EAAA,CAAA,MAAA,EAAA,OAAAf,CAAA,CAAA,CAEA,CAAA,EAAA1B,EAAA,IAAAA,EAAA,SAAA,CAAA,CAAA,EAGA,OAAA6B,GAAA,SAAA7B,EAAA,IAIA,MAAA,CAAA,UAAA,6CACA,MAAA,CACA,OAAA,OACA,QAAA,WACA,UAAA0B,GAAA,MAAAA,EAAA,OAAA,8BAAA,EACA,EACA,SAAAG,CAEA,CAAA,EAAAA,EAGA7B,EAAA,IAEA0C,EAAA,CAAA,GAAAnB,EACA,SAAA,GACA,QAAA,GACA,UAAA,CACA,GAAAA,EAAA,UACA,UAAAoB,EAAA1B,GAAA,YAAAA,EAAA,WAAA,YAAA0B,EAAA,UACA,CACA,CAAA,EACA3C,EAAA,IACA4C,EAAA,CAAA,gBAAA,CACA,WAAA,SACA,eAAA,SACA,OAAA,MACA,EACA,IAAA,CACA,CAAAxC,CAAA,EAAAa,GAAA,YAAAA,EAAA,gBACA,EACA,KAAAc,GAAA/B,EAAA,IAAA,MAAA,CAAA,SAAAA,EAAA,IAIA6C,EAAA,CAAA,aAAA,CACA,QAAA,OACA,SAAA,OACA,WAAA,QACA,EACA,WAAA7C,EAAA,IAAA8C,EAAA,CAAA,MAAA,OAAA,KAAA,eAAA,CAAA,EAEA,KAAAf,CAEA,CAAA,CAAA,CAAA,CAEA,CAAA,EAGA/B,EAAA,IACA,MAAA,CAAA,UAAA,OACA,MAAA,CACA,UAAA,GACA,MAAA,OACA,eAAA,UACA,EACA,SAAAA,EAAA,IAEA+C,EAAA,CAAA,OAAA,IAAAZ,EAAA,EACA,OAAA,IAAAjC,EAAA,EAAA,EACA,SAAA,OACA,SAAA,SACA,CAAA,CACA,CAAA,CACA,CAAA,CAAA,CAAA,CAAA,EAzFAF,EAAA,IAAAgD,EAAA,CAAA,QAAA,GAAA,QAAA,6BAAA,CAAA,CA6FA"}