import{aJ as T,b1 as _,cn as q,co as p,l as Q,bd as x,cp as L}from"./index-4cc8c479.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},o=new Error().stack;o&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[o]="da908d54-0c30-4f1a-4ab2-19d11389e280",e._sentryDebugIdIdentifier="sentry-dbid-da908d54-0c30-4f1a-4ab2-19d11389e280")}catch{}})();function P({domain:e,antId:o}){const[{arioContract:a,ioProcessId:f,aoNetwork:u}]=T(),[{wallet:c}]=_(),{data:b,isLoading:h,isRefetching:I,error:m,refetch:N}=q({queryKey:["domainInfo",{domain:e,antId:o,ioProcessId:f,aoNetwork:u}],queryFn:()=>R({domain:e,antId:o}).catch(t=>t)});async function R({domain:t,antId:i}){if(!t&&!i)throw new Error("No domain or antId provided");const r=t?await a.getArNSRecord({name:Q(t)}):void 0;if(!i&&!(r!=null&&r.processId))throw new Error("No ANT id or record found");const s=i||(r==null?void 0:r.processId),l=c==null?void 0:c.arconnectSigner;if(!s)throw new Error("No processId found");const w=x.init({processId:s,...l!==void 0?{signer:l}:{}}),d=await w.getState();if(!d)throw new Error("State not found for ANT contract");const S=await p.fetchQuery(L({arioContract:a,meta:[f,u.CU_URL]})),C=Object.entries(S).filter(([,n])=>n.processId==s.toString()).map(([n])=>n),{Name:D,Ticker:v,Owner:E,Controllers:k,Records:y}=d,g=y["@"],A=Object.keys(y).filter(n=>n!=="@").length;if(!g)throw new Error("No apexRecord found");return{arnsRecord:r,associatedNames:C,processId:s,antProcess:w,name:D,ticker:v,owner:E,controllers:k,undernameCount:A,apexRecord:g,records:d.Records}}return{data:b,isLoading:h||I,error:m,refetch:()=>{p.invalidateQueries({queryKey:["domainInfo",{domain:e,antId:o}],refetchType:"all"}),N()}}}export{P as u};
//# sourceMappingURL=useDomainInfo-e1056820.js.map
