{"version":3,"file":"TransactionReview-56c21d9f.js","sources":["../../src/state/actions/dispatchArIOInteraction.ts","../../src/components/pages/Transaction/transaction-descriptions.ts","../../src/components/pages/Transaction/transaction-headers.tsx","../../src/components/pages/Transaction/TransactionReview.tsx"],"sourcesContent":["import {\n  AR_IO_CONTRACT_FUNCTIONS,\n  ArIOWritable,\n  WriteInteractionResult,\n} from '@ar.io/sdk/web';\nimport { ArweaveCompositeDataProvider } from '@src/services/arweave/ArweaveCompositeDataProvider';\nimport { ArweaveTransactionID } from '@src/services/arweave/ArweaveTransactionID';\nimport { TransactionAction } from '@src/state/reducers/TransactionReducer';\nimport {\n  ARNS_INTERACTION_TYPES,\n  ContractInteraction,\n  TransactionDataPayload,\n} from '@src/types';\nimport {\n  buildSmartweaveInteractionTags,\n  pruneExtraDataFromTransactionPayload,\n} from '@src/utils';\nimport {\n  ARNS_REGISTRY_ADDRESS,\n  ATOMIC_FLAG,\n  DEFAULT_ANT_SOURCE_CODE_TX,\n  DEFAULT_CONTRACT_CACHE,\n  MIN_TTL_SECONDS,\n} from '@src/utils/constants';\nimport eventEmitter from '@src/utils/events';\nimport { Dispatch } from 'react';\n\n/**\n *\n * @param arweaveCompositeProvider - Temporary while the ArIO sdk does not support certain interactions\n */\nexport default async function dispatchArIOInteraction({\n  payload,\n  workflowName,\n  arioContract,\n  arweaveCompositeProvider,\n  contractTxId,\n  dispatch,\n}: {\n  payload: Record<string, any>;\n  workflowName: ARNS_INTERACTION_TYPES;\n  arioContract?: ArIOWritable;\n  arweaveCompositeProvider: ArweaveCompositeDataProvider;\n  contractTxId: ArweaveTransactionID;\n  dispatch: Dispatch<TransactionAction>;\n}): Promise<ContractInteraction> {\n  let result: WriteInteractionResult | undefined = undefined;\n  let functionName;\n\n  try {\n    if (!arioContract) throw new Error('ArIO provider is not defined');\n    dispatch({\n      type: 'setSigning',\n      payload: true,\n    });\n    switch (workflowName) {\n      case ARNS_INTERACTION_TYPES.BUY_RECORD: {\n        // TODO: Replace this once the ArIO SDK supports this interaction\n        let tags = undefined;\n        if (payload.contractTxId === ATOMIC_FLAG) {\n          if (payload.targetId && payload.state) {\n            payload.state.records['@'] = {\n              transactionId: payload.targetId,\n              ttlSeconds: MIN_TTL_SECONDS,\n            };\n          }\n        } else if (payload.targetId) {\n          tags = buildSmartweaveInteractionTags({\n            contractId: new ArweaveTransactionID(payload.contractTxId),\n            input: {\n              function: 'setRecord',\n              subDomain: '@',\n              transactionId: payload.targetId,\n              ttlSeconds: MIN_TTL_SECONDS,\n            },\n          });\n        }\n\n        const cleanPayload = pruneExtraDataFromTransactionPayload(\n          ARNS_INTERACTION_TYPES.BUY_RECORD,\n          payload as TransactionDataPayload,\n        );\n        const writeInteractionId =\n          payload.contractTxId === ATOMIC_FLAG\n            ? await arweaveCompositeProvider.registerAtomicName({\n                walletAddress: payload.walletAddress,\n                registryId: ARNS_REGISTRY_ADDRESS,\n                srcCodeTransactionId: new ArweaveTransactionID(\n                  DEFAULT_ANT_SOURCE_CODE_TX,\n                ),\n                initialState: payload.state,\n                domain: payload.name,\n                type: payload.type,\n                years: payload.years,\n                auction: payload.auction ?? false,\n                qty: payload.qty,\n                isBid: payload.isBid ?? false,\n              })\n            : await arweaveCompositeProvider.writeTransaction({\n                walletAddress: payload.walletAddress,\n                contractTxId: ARNS_REGISTRY_ADDRESS,\n                dryWrite: true,\n                payload: {\n                  function: AR_IO_CONTRACT_FUNCTIONS.BUY_RECORD,\n                  ...cleanPayload,\n                },\n                tags,\n                interactionDetails: {\n                  isBid: payload.isBid ? payload.isBid : false,\n                },\n              });\n\n        result = {\n          id: writeInteractionId as any as string,\n          owner: payload.walletAddress,\n        } as any;\n        functionName = AR_IO_CONTRACT_FUNCTIONS.BUY_RECORD;\n\n        break;\n      }\n      case ARNS_INTERACTION_TYPES.EXTEND_LEASE:\n        result = await arioContract.extendLease({\n          domain: payload.name,\n          years: payload.years,\n        });\n        functionName = AR_IO_CONTRACT_FUNCTIONS.EXTEND_RECORD;\n        break;\n      case ARNS_INTERACTION_TYPES.INCREASE_UNDERNAMES:\n        result = await arioContract.increaseUndernameLimit({\n          domain: payload.name,\n          qty: payload.qty,\n        });\n        functionName = AR_IO_CONTRACT_FUNCTIONS.INCREASE_UNDERNAME_COUNT;\n        break;\n      default:\n        throw new Error(`Unsupported workflow name: ${workflowName}`);\n    }\n  } catch (error) {\n    eventEmitter.emit('error', error);\n  } finally {\n    dispatch({\n      type: 'setSigning',\n      payload: false,\n    });\n  }\n  if (!result) {\n    throw new Error('Failed to dispatch ArIO interaction');\n  }\n  if (!functionName) throw new Error('Failed to set workflow name');\n\n  const interaction: ContractInteraction = {\n    deployer: payload.walletAddress.toString(),\n    contractTxId: contractTxId.toString(),\n    id: await result.id,\n    payload: {\n      ...payload,\n      function: functionName,\n    },\n    type: 'interaction',\n  };\n\n  await DEFAULT_CONTRACT_CACHE.push(contractTxId.toString(), interaction);\n\n  dispatch({\n    type: 'setWorkflowName',\n    payload: workflowName,\n  });\n  dispatch({\n    type: 'setInteractionResult',\n    payload: interaction,\n  });\n  return interaction;\n}\n","import { ANT_INTERACTION_TYPES, ARNS_INTERACTION_TYPES } from '@src/types';\n\nexport function getTransactionDescription({\n  workflowName,\n  ...params\n}: {\n  workflowName: ARNS_INTERACTION_TYPES | ANT_INTERACTION_TYPES;\n} & Record<string, any>) {\n  switch (workflowName) {\n    case ARNS_INTERACTION_TYPES.INCREASE_UNDERNAMES:\n      return `Increasing your undernames is paid in ${params.ioTicker} tokens, and an Arweave network fee paid in AR tokens.`;\n    case ARNS_INTERACTION_TYPES.EXTEND_LEASE:\n    case ARNS_INTERACTION_TYPES.BUY_RECORD:\n      return `This includes a registration fee (paid in ${params.ioTicker} tokens) and the Arweave network fee (paid in AR tokens).`;\n    default:\n      return undefined;\n  }\n}\n","import { ANT_INTERACTION_TYPES, ARNS_INTERACTION_TYPES } from '@src/types';\n\nexport function getTransactionHeader({\n  workflowName,\n  ...params // eslint-disable-line @typescript-eslint/no-unused-vars\n}: {\n  workflowName: ARNS_INTERACTION_TYPES | ANT_INTERACTION_TYPES;\n} & Record<string, any>) {\n  switch (workflowName) {\n    case ARNS_INTERACTION_TYPES.INCREASE_UNDERNAMES:\n    case ARNS_INTERACTION_TYPES.EXTEND_LEASE:\n      return (\n        <h1\n          className=\"flex white\"\n          style={{ width: '100%', paddingBottom: '30px' }}\n        >\n          Review\n        </h1>\n      );\n    case ARNS_INTERACTION_TYPES.BUY_RECORD:\n      return `Review your ${params.auction ? 'Auction' : 'Purchase'}`;\n    default:\n      return undefined;\n  }\n}\n","import { ArIOWritable } from '@ar.io/sdk/web';\nimport { ANTCard } from '@src/components/cards';\nimport { InfoIcon } from '@src/components/icons';\nimport WorkflowButtons from '@src/components/inputs/buttons/WorkflowButtons/WorkflowButtons';\nimport TransactionCost from '@src/components/layout/TransactionCost/TransactionCost';\nimport { StepProgressBar } from '@src/components/layout/progress';\nimport PageLoader from '@src/components/layout/progress/PageLoader/PageLoader';\nimport { useIsMobile } from '@src/hooks';\nimport dispatchArIOInteraction from '@src/state/actions/dispatchArIOInteraction';\nimport { useGlobalState } from '@src/state/contexts/GlobalState';\nimport { useTransactionState } from '@src/state/contexts/TransactionState';\nimport { useWalletState } from '@src/state/contexts/WalletState';\nimport {\n  ARNSMapping,\n  ARNS_INTERACTION_TYPES,\n  TransactionData,\n  ValidInteractionType,\n} from '@src/types';\nimport {\n  getARNSMappingByInteractionType,\n  getWorkflowStepsForInteraction,\n} from '@src/utils';\nimport eventEmitter from '@src/utils/events';\nimport { StepProps } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { getTransactionDescription } from './transaction-descriptions';\nimport { getTransactionHeader } from './transaction-headers';\n\n// page on route transaction/review\n// on completion routes to transaction/complete\nfunction TransactionReview() {\n  const navigate = useNavigate();\n  const [{ ioTicker, arioContract, arnsContractId, arweaveDataProvider }] =\n    useGlobalState();\n  const [{ walletAddress }] = useWalletState();\n  const [\n    { workflowName, interactionType, transactionData, interactionResult },\n    dispatchTransactionState,\n  ] = useTransactionState();\n  const isMobile = useIsMobile();\n  const [antProps, setAntProps] = useState<ARNSMapping>();\n  const [steps, setSteps] = useState<StepProps[] | undefined>(\n    getWorkflowStepsForInteraction(interactionType),\n  );\n  const [header, setHeader] = useState<string | JSX.Element | undefined>(\n    getTransactionHeader({\n      workflowName: workflowName as ARNS_INTERACTION_TYPES,\n    }),\n  );\n  const [transactionDescription, setTransactionDescription] = useState(\n    getTransactionDescription({\n      workflowName: workflowName as ARNS_INTERACTION_TYPES,\n      ioTicker,\n    }),\n  );\n\n  useEffect(() => {\n    if (!transactionData && !workflowName) {\n      navigate('/');\n    }\n    setAntProps(\n      getARNSMappingByInteractionType({\n        interactionType: interactionType as ValidInteractionType,\n        transactionData: {\n          ...transactionData,\n          deployedTransactionId: interactionResult?.id,\n        } as any as TransactionData,\n      }) as ARNSMapping,\n    );\n    setTransactionDescription(\n      getTransactionDescription({\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n        ioTicker,\n      }),\n    );\n    setSteps(getWorkflowStepsForInteraction(interactionType));\n    setHeader(\n      getTransactionHeader({\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n        auction: { ...(transactionData as any) }?.auction,\n      }),\n    );\n  }, [\n    transactionData,\n    interactionResult,\n    workflowName,\n    interactionType,\n    walletAddress,\n  ]);\n\n  async function handleNext() {\n    try {\n      if (!(arioContract instanceof ArIOWritable)) {\n        throw new Error('Wallet must be connected to dispatch transactions.');\n      }\n      if (!transactionData || !workflowName) {\n        throw new Error('Transaction data is missing');\n      }\n      await dispatchArIOInteraction({\n        arioContract,\n        arweaveCompositeProvider: arweaveDataProvider,\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n        payload: transactionData,\n        contractTxId: arnsContractId,\n        dispatch: dispatchTransactionState,\n      });\n\n      navigate('/transaction/complete');\n    } catch (error) {\n      eventEmitter.emit('error', error);\n    }\n  }\n\n  if (!antProps) {\n    return (\n      <PageLoader loading={true} message={'Loading transaction data...'} />\n    );\n  }\n\n  return (\n    <div className=\"page\">\n      <div\n        className=\"flex flex-column center\"\n        style={isMobile ? {} : { gap: '0px', maxWidth: '900px', width: '100%' }}\n      >\n        {steps && steps.length ? (\n          <div\n            className=\"flex flex-row\"\n            style={{\n              marginBottom: '30px',\n              width: '100%',\n            }}\n          >\n            <StepProgressBar stage={3} stages={steps} />\n          </div>\n        ) : (\n          <></>\n        )}\n\n        {typeof header === 'string' ? (\n          <div\n            className=\"flex flex-row text-large white bold center\"\n            style={{\n              height: '100%',\n              padding: '80px 0px',\n              borderTop: steps?.length ? 'solid 1px var(--text-faded)' : '',\n            }}\n          >\n            {header}\n          </div>\n        ) : (\n          header\n        )}\n        <ANTCard {...antProps} bordered compact={false} />\n        <TransactionCost\n          fee={{\n            [ioTicker]: transactionData?.interactionPrice,\n          }}\n          info={\n            transactionDescription && (\n              <div\n                className=\"flex flex-row flex-left\"\n                style={{\n                  gap: '10px',\n                  maxWidth: '50%',\n                  justifyContent: 'flex-start',\n                  alignItems: 'flex-start',\n                }}\n              >\n                <InfoIcon\n                  width={'20px'}\n                  height={'20px'}\n                  fill=\"var(--text-grey)\"\n                />\n                <span\n                  className=\"flex flex-column flex-left grey text\"\n                  style={{ textAlign: 'left', lineHeight: '1.5em' }}\n                >\n                  {transactionDescription}\n                </span>\n              </div>\n            )\n          }\n        />\n        <div\n          className=\"flex\"\n          style={{\n            marginTop: 20,\n            width: '100%',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <WorkflowButtons\n            onNext={() => handleNext()}\n            onBack={() => navigate(-1)}\n            backText={'Back'}\n            nextText={'Confirm'}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TransactionReview;\n"],"names":["dispatchArIOInteraction","payload","workflowName","arioContract","arweaveCompositeProvider","contractTxId","dispatch","result","functionName","ARNS_INTERACTION_TYPES","tags","ATOMIC_FLAG","MIN_TTL_SECONDS","buildSmartweaveInteractionTags","ArweaveTransactionID","cleanPayload","pruneExtraDataFromTransactionPayload","ARNS_REGISTRY_ADDRESS","DEFAULT_ANT_SOURCE_CODE_TX","AR_IO_CONTRACT_FUNCTIONS","error","eventEmitter","interaction","DEFAULT_CONTRACT_CACHE","getTransactionDescription","params","getTransactionHeader","jsxRuntimeExports","TransactionReview","navigate","useNavigate","ioTicker","arnsContractId","arweaveDataProvider","useGlobalState","walletAddress","useWalletState","interactionType","transactionData","interactionResult","dispatchTransactionState","useTransactionState","isMobile","useIsMobile","antProps","setAntProps","reactExports","steps","setSteps","getWorkflowStepsForInteraction","header","setHeader","transactionDescription","setTransactionDescription","getARNSMappingByInteractionType","handleNext","ArIOWritable","StepProgressBar","ANTCard","TransactionCost","SvgInfo","WorkflowButtons","PageLoader"],"mappings":"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"}