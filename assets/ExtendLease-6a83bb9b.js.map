{"version":3,"file":"ExtendLease-6a83bb9b.js","sources":["../../src/components/layout/ExtendLease/ExtendLease.tsx"],"sourcesContent":["import { AoArNSNameData, isLeasedArNSRecord, mARIOToken } from '@ar.io/sdk/web';\nimport { useTokenCost } from '@src/hooks/useTokenCost';\nimport Lottie from 'lottie-react';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { ArweaveTransactionID } from '../../../services/arweave/ArweaveTransactionID';\nimport { useGlobalState } from '../../../state/contexts/GlobalState';\nimport { useTransactionState } from '../../../state/contexts/TransactionState';\nimport { useWalletState } from '../../../state/contexts/WalletState';\nimport {\n  ARNS_INTERACTION_TYPES,\n  ExtendLeasePayload,\n  TRANSACTION_TYPES,\n} from '../../../types';\nimport {\n  formatDate,\n  getLeaseDurationFromEndTimestamp,\n  lowerCaseDomain,\n  sleep,\n} from '../../../utils';\nimport {\n  MAX_LEASE_DURATION,\n  MIN_LEASE_DURATION,\n  YEAR_IN_MILLISECONDS,\n} from '../../../utils/constants';\nimport eventEmitter from '../../../utils/events';\nimport { InfoIcon } from '../../icons';\nimport arioLoading from '../../icons/ario-spinner.json';\nimport Counter from '../../inputs/Counter/Counter';\nimport WorkflowButtons from '../../inputs/buttons/WorkflowButtons/WorkflowButtons';\nimport DialogModal from '../../modals/DialogModal/DialogModal';\nimport TransactionCost from '../TransactionCost/TransactionCost';\nimport PageLoader from '../progress/PageLoader/PageLoader';\n\nfunction ExtendLease() {\n  // TODO: remove use of source contract\n  const [{ arioTicker, arioContract, arioProcessId }] = useGlobalState();\n  const [{ walletAddress }] = useWalletState();\n  const [, dispatchTransactionState] = useTransactionState();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const name = location.pathname.split('/').at(-2);\n  const [record, setRecord] = useState<AoArNSNameData>();\n  const [registrationType, setRegistrationType] = useState<TRANSACTION_TYPES>();\n  const [newLeaseDuration, setNewLeaseDuration] = useState<number>(1);\n  const [maxIncrease, setMaxIncrease] = useState<number>(0);\n  const [ioBalance, setIoBalance] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(false);\n  const { data: ioFee } = useTokenCost(\n    registrationType === 'permabuy'\n      ? {\n          intent: 'Upgrade-Name',\n          name: name as string,\n        }\n      : {\n          intent: 'Extend-Lease',\n          years: newLeaseDuration,\n          type: registrationType?.toString() as any,\n          name: name as string,\n        },\n  );\n\n  useEffect(() => {\n    if (!name) {\n      navigate(`/manage/names`);\n      return;\n    }\n    onLoad(lowerCaseDomain(name));\n  }, [name]);\n\n  async function onLoad(domain: string) {\n    try {\n      setLoading(true);\n      // TODO: make this generic so we get back the correct type\n\n      const domainRecord = await arioContract.getArNSRecord({\n        name: lowerCaseDomain(domain),\n      });\n      if (!domainRecord) {\n        throw new Error(`Unable to get record for ${domain}`);\n      }\n      setRegistrationType(domainRecord.type as TRANSACTION_TYPES);\n      setRecord(domainRecord);\n\n      if (!isLeasedArNSRecord(domainRecord)) {\n        setRegistrationType(TRANSACTION_TYPES.BUY);\n        return;\n      }\n\n      if (walletAddress) {\n        const balance = await arioContract.getBalance({\n          address: walletAddress.toString(),\n        });\n        setIoBalance(balance ?? 0);\n      }\n\n      setMaxIncrease(\n        Math.max(\n          0,\n          MAX_LEASE_DURATION -\n            getLeaseDurationFromEndTimestamp(\n              domainRecord.startTimestamp,\n              domainRecord.endTimestamp,\n            ),\n        ),\n      );\n    } catch (error) {\n      eventEmitter.emit('error', error);\n      // sleep 2000 to make page transition less jarring\n      await sleep(2000);\n      navigate(`/manage/names`);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  if (!record || !name) {\n    return (\n      <PageLoader loading={!record} message={`Loading info for ${name}`} />\n    );\n  }\n\n  if (!isLeasedArNSRecord(record)) {\n    return (\n      <div className=\"page center\">\n        <DialogModal\n          showClose={false}\n          cancelText=\"Manage\"\n          body={\n            <span\n              className=\"flex flex-column white center\"\n              style={{\n                height: '100%',\n              }}\n            >\n              This domain is permanently registered and its lease cannot be\n              extended.\n            </span>\n          }\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"page center\">\n      <div className=\"flex flex-column\" style={{ maxWidth: '1000px' }}>\n        <div\n          className=\"flex flex-row center\"\n          style={{ justifyContent: 'space-between' }}\n        >\n          <h1 className=\"white text-[2rem]\">Extend Lease</h1>\n\n          <div\n            className=\"flex flex-row center white\"\n            style={{\n              border: 'solid 1px var(--text-faded)',\n              borderRadius: 'var(--corner-radius)',\n              gap: '8px',\n              width: 'fit-content',\n              padding: '12px',\n            }}\n          >\n            <InfoIcon width={'22px'} height={'22px'} fill=\"var(--text-grey)\" />\n            Expiring on {formatDate(record.endTimestamp)}\n          </div>\n        </div>{' '}\n        <div\n          className=\"flex flex-row flex-space-between\"\n          style={{ gap: '25px' }}\n        >\n          <button\n            className=\"flex flex-row center text-medium bold pointer\"\n            onClick={() => setRegistrationType(TRANSACTION_TYPES.LEASE)}\n            style={{\n              position: 'relative',\n              background:\n                registrationType === TRANSACTION_TYPES.LEASE\n                  ? 'var(--text-white)'\n                  : '',\n              color:\n                registrationType === TRANSACTION_TYPES.LEASE\n                  ? 'var(--text-black)'\n                  : 'var(--text-white)',\n              border: 'solid 2px var(--text-faded)',\n              borderRadius: 'var(--corner-radius)',\n              height: '56px',\n              borderBottomWidth: '0.5px',\n            }}\n          >\n            Extend Lease{' '}\n            {registrationType === TRANSACTION_TYPES.LEASE ? (\n              <div\n                style={{\n                  position: 'absolute',\n                  bottom: '-6px',\n                  left: '50%',\n                  transform: 'rotate(45deg)',\n                  width: '11px',\n                  height: '11px',\n                  background: 'var(--text-white)',\n                }}\n              ></div>\n            ) : (\n              <></>\n            )}\n          </button>\n          <button\n            className=\"flex flex-row center text-medium bold pointer\"\n            style={{\n              position: 'relative',\n              background:\n                registrationType === TRANSACTION_TYPES.BUY\n                  ? 'var(--text-white)'\n                  : '',\n              color:\n                registrationType === TRANSACTION_TYPES.BUY\n                  ? 'var(--text-black)'\n                  : 'var(--text-white)',\n              border: 'solid 2px var(--text-faded)',\n              borderRadius: 'var(--corner-radius)',\n              height: '56px',\n              borderBottomWidth: '0.5px',\n            }}\n            onClick={() => setRegistrationType(TRANSACTION_TYPES.BUY)}\n          >\n            Permanently Buy{' '}\n            {registrationType === TRANSACTION_TYPES.BUY ? (\n              <div\n                style={{\n                  position: 'absolute',\n                  bottom: -6,\n                  left: '50%',\n                  transform: 'rotate(45deg)',\n                  width: '11px',\n                  height: '11px',\n                  background: 'var(--text-white)',\n                }}\n              ></div>\n            ) : (\n              <></>\n            )}\n          </button>\n        </div>\n        <div className=\"flex flex-col relative p-[30px] w-full h-[200px] bg-foreground box-border rounded-md items-center justify-center \">\n          {registrationType === TRANSACTION_TYPES.LEASE ? (\n            <>\n              {' '}\n              {/* loading overlay */}\n              {loading && (\n                <div className=\"flex flex-col items-center justify-center rounded-md bg-foreground h-full w-full absolute top-0 left-0\">\n                  <div className=\"flex flex-row items-center justify-center\">\n                    <Lottie\n                      animationData={arioLoading}\n                      loop={true}\n                      className=\"h-[150px]\"\n                    />\n                  </div>\n                </div>\n              )}\n              {/* maxxed out duration overlay */}\n              {!loading && maxIncrease < 1 && (\n                <div className=\"flex flex-col center  rounded-md  bg-[rgb(0,0,0,0.5)] h-full w-full absolute top-0 left-0\">\n                  <div className=\"flex flex-row items-center justify-center max-w-fit h-fit rounded-md border border-error text-white bg-foreground p-6 gap-2\">\n                    {' '}\n                    <InfoIcon\n                      width={'24px'}\n                      height={'24px'}\n                      fill=\"var(--error-red)\"\n                    />\n                    <span className=\"center\">\n                      Maximum lease extension reached\n                    </span>\n                  </div>\n                </div>\n              )}\n              <Counter\n                setValue={setNewLeaseDuration}\n                value={newLeaseDuration}\n                maxValue={maxIncrease}\n                minValue={MIN_LEASE_DURATION}\n                valueName={newLeaseDuration > 1 ? 'years' : 'year'}\n                valueStyle={{ padding: '10px 80px' }}\n                detail={\n                  <span>\n                    until{' '}\n                    {formatDate(\n                      record.endTimestamp +\n                        newLeaseDuration * YEAR_IN_MILLISECONDS,\n                    )}\n                  </span>\n                }\n                title={\n                  <span\n                    className=\"white\"\n                    style={{ padding: '0px 10px 10px 10px', fontWeight: '500' }}\n                  >{`Extension Duration ( up to ${Math.max(\n                    1,\n                    maxIncrease,\n                  )} year${maxIncrease > 1 ? 's' : ''} )`}</span>\n                }\n              />\n            </>\n          ) : (\n            <div\n              className=\"flex flex-column flex-center\"\n              style={{ gap: '1em' }}\n            >\n              <span className=\"text-medium grey center\">\n                Registration Period\n              </span>\n              <span className=\"text-medium white center\">Permanent</span>\n            </div>\n          )}\n        </div>\n        {/* TODO: [PE-4563] implement contract read api for extend record */}\n        <TransactionCost\n          feeWrapperStyle={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%',\n          }}\n          fee={{\n            [arioTicker]: ioFee\n              ? new mARIOToken(ioFee).toARIO().valueOf()\n              : undefined,\n          }}\n          ioRequired={true}\n        />\n        <WorkflowButtons\n          backText=\"Cancel\"\n          nextText=\"Continue\"\n          customNextStyle={{\n            background: maxIncrease < 1 && 'var(--text-grey)',\n            color: maxIncrease < 1 && 'var(--text-white)',\n          }}\n          onBack={() => {\n            navigate(`/manage/names/${lowerCaseDomain(name)}`);\n          }}\n          onNext={\n            !ioFee || ioFee < 0\n              ? undefined\n              : maxIncrease >= 1 || ioFee <= ioBalance\n              ? () => {\n                  if (registrationType === TRANSACTION_TYPES.LEASE) {\n                    const payload: ExtendLeasePayload = {\n                      name,\n                      years: newLeaseDuration,\n                      processId: new ArweaveTransactionID(record.processId),\n                      qty: ioFee,\n                    };\n\n                    dispatchTransactionState({\n                      type: 'setInteractionType',\n                      payload: ARNS_INTERACTION_TYPES.EXTEND_LEASE,\n                    });\n                    dispatchTransactionState({\n                      type: 'setWorkflowName',\n                      payload: ARNS_INTERACTION_TYPES.EXTEND_LEASE,\n                    });\n                    dispatchTransactionState({\n                      type: 'setTransactionData',\n                      payload: {\n                        assetId: arioProcessId,\n                        functionName: 'extendRecord',\n                        ...payload,\n                        arnsRecord: record,\n                        interactionPrice: new mARIOToken(ioFee)\n                          .toARIO()\n                          .valueOf(),\n                      },\n                    });\n                  } else {\n                    dispatchTransactionState({\n                      type: 'setInteractionType',\n                      payload: ARNS_INTERACTION_TYPES.UPGRADE_NAME,\n                    });\n                    dispatchTransactionState({\n                      type: 'setWorkflowName',\n                      payload: ARNS_INTERACTION_TYPES.UPGRADE_NAME,\n                    });\n                    dispatchTransactionState({\n                      type: 'setTransactionData',\n                      payload: {\n                        assetId: arioProcessId,\n                        functionName: 'upgradeName',\n                        name,\n                        processId: new ArweaveTransactionID(record.processId),\n                        qty: ioFee,\n                        arnsRecord: record,\n                        interactionPrice: new mARIOToken(ioFee)\n                          .toARIO()\n                          .valueOf(),\n                      },\n                    });\n                  }\n\n                  navigate('/transaction/review', {\n                    state: `/manage/names/${lowerCaseDomain(name)}/extend`,\n                  });\n                }\n              : undefined\n          }\n          detail={\n            ioFee &&\n            new mARIOToken(ioFee).toARIO().valueOf() >= ioBalance &&\n            maxIncrease > 0 ? (\n              <div\n                className=\"flex flex-row center\"\n                style={{\n                  width: 'fit-content',\n                  height: 'fit-content',\n                  borderRadius: 'var(--corner-radius)',\n                  border: 'solid 1px var(--error-red)',\n                  background: '#1D1314',\n                  padding: '8px',\n                  boxSizing: 'border-box',\n                  color: 'var(--error-red)',\n                  gap: '10px',\n                  whiteSpace: 'nowrap',\n                  fontSize: '13px',\n                }}\n              >\n                {' '}\n                <InfoIcon\n                  width={'24px'}\n                  height={'24px'}\n                  fill=\"var(--error-red)\"\n                />\n                <span className=\"center\">Insufficient funds.</span>\n              </div>\n            ) : (\n              <></>\n            )\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ExtendLease;\n"],"names":["ExtendLease","arioTicker","arioContract","arioProcessId","useGlobalState","walletAddress","useWalletState","dispatchTransactionState","useTransactionState","location","useLocation","navigate","useNavigate","name","record","setRecord","reactExports","registrationType","setRegistrationType","newLeaseDuration","setNewLeaseDuration","maxIncrease","setMaxIncrease","ioBalance","setIoBalance","loading","setLoading","ioFee","useTokenCost","onLoad","lowerCaseDomain","domain","domainRecord","isLeasedArNSRecord","TRANSACTION_TYPES","balance","MAX_LEASE_DURATION","getLeaseDurationFromEndTimestamp","error","eventEmitter","sleep","jsxRuntimeExports","PageLoader","SvgInfo","formatDate","Lottie","arioLoading","Counter","MIN_LEASE_DURATION","YEAR_IN_MILLISECONDS","TransactionCost","mARIOToken","WorkflowButtons","payload","ArweaveTransactionID","ARNS_INTERACTION_TYPES","DialogModal"],"mappings":"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"}