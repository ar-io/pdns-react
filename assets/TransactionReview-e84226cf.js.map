{"version":3,"file":"TransactionReview-e84226cf.js","sources":["../../node_modules/@ar.io/sdk/lib/esm/utils/ao.js","../../src/state/actions/dispatchArIOInteraction.ts","../../src/components/pages/Transaction/transaction-descriptions.ts","../../src/components/pages/Transaction/transaction-headers.tsx","../../src/components/pages/Transaction/TransactionReview.tsx"],"sourcesContent":["/**\n * Copyright (C) 2022-2024 Permanent Data Solutions, Inc. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport { connect } from '@permaweb/aoconnect';\nimport { defaultArweave } from '../common/arweave.js';\nimport { AOProcess } from '../common/index.js';\nimport { ANT_LUA_ID, AOS_MODULE_ID, DEFAULT_SCHEDULER_ID, } from '../constants.js';\nexport async function spawnANT({ signer, module = AOS_MODULE_ID, luaCodeTxId = ANT_LUA_ID, ao = connect(), scheduler = DEFAULT_SCHEDULER_ID, state, stateContractTxId, }) {\n    //TODO: cache locally and only fetch if not cached\n    const luaString = (await defaultArweave.transactions.getData(luaCodeTxId, {\n        decode: true,\n        string: true,\n    }));\n    const processId = await ao.spawn({\n        module,\n        scheduler,\n        signer: await AOProcess.createAoSigner(signer),\n    });\n    const aosClient = new AOProcess({\n        processId,\n        ao,\n    });\n    await aosClient.send({\n        tags: [\n            { name: 'Action', value: 'Eval' },\n            { name: 'App-Name', value: 'ArNS-ANT' },\n            { name: 'Source-Code-TX-ID', value: luaCodeTxId },\n        ],\n        data: luaString,\n        signer,\n    });\n    if (state) {\n        await aosClient.send({\n            tags: [\n                { name: 'Action', value: 'Initialize-State' },\n                ...(stateContractTxId !== undefined\n                    ? [{ name: 'State-Contract-TX-ID', value: stateContractTxId }]\n                    : []),\n            ],\n            data: JSON.stringify(state),\n            signer,\n        });\n    }\n    return processId;\n}\n","import {\n  AR_IO_CONTRACT_FUNCTIONS,\n  AoIOWrite,\n  AoMessageResult,\n  ArconnectSigner,\n  spawnANT,\n} from '@ar.io/sdk/web';\nimport { ArweaveTransactionID } from '@src/services/arweave/ArweaveTransactionID';\nimport { TransactionAction } from '@src/state/reducers/TransactionReducer';\nimport { ARNS_INTERACTION_TYPES, ContractInteraction } from '@src/types';\nimport { lowerCaseDomain } from '@src/utils';\nimport { WRITE_OPTIONS } from '@src/utils/constants';\nimport eventEmitter from '@src/utils/events';\nimport { Dispatch } from 'react';\n\nconst LUA_CODE_TX_ID = 'rYRd9foqUVvMScTnX63FuyUOaP5tmlJx5tG1btCx6sg';\nexport default async function dispatchArIOInteraction({\n  payload,\n  workflowName,\n  owner,\n  arioContract,\n  processId,\n  dispatch,\n  signer,\n}: {\n  payload: Record<string, any>;\n  workflowName: ARNS_INTERACTION_TYPES;\n  owner: ArweaveTransactionID;\n  arioContract?: AoIOWrite;\n  processId: ArweaveTransactionID;\n  dispatch: Dispatch<TransactionAction>;\n  signer?: ArconnectSigner;\n}): Promise<ContractInteraction> {\n  let result: AoMessageResult | undefined = undefined;\n  let functionName;\n\n  try {\n    if (!arioContract) throw new Error('ArIO provider is not defined');\n    if (!signer) throw new Error('signer is not defined');\n    dispatch({\n      type: 'setSigning',\n      payload: true,\n    });\n    switch (workflowName) {\n      case ARNS_INTERACTION_TYPES.BUY_RECORD: {\n        const { name, type, years } = payload;\n        let antProcessId: string = payload.processId;\n\n        if (antProcessId === 'atomic') {\n          antProcessId = await spawnANT({\n            state: payload.state,\n            signer: signer,\n            luaCodeTxId: LUA_CODE_TX_ID,\n          });\n        }\n\n        const buyRecordResult = await arioContract.buyRecord({\n          name: lowerCaseDomain(name),\n          type,\n          years,\n          processId: antProcessId,\n        });\n\n        payload.processId = antProcessId;\n\n        result = buyRecordResult;\n        functionName = AR_IO_CONTRACT_FUNCTIONS.BUY_RECORD;\n        break;\n      }\n      case ARNS_INTERACTION_TYPES.EXTEND_LEASE:\n        result = await arioContract.extendLease(\n          {\n            name: lowerCaseDomain(payload.name),\n            years: payload.years,\n          },\n          WRITE_OPTIONS,\n        );\n        functionName = AR_IO_CONTRACT_FUNCTIONS.EXTEND_RECORD;\n        break;\n      case ARNS_INTERACTION_TYPES.INCREASE_UNDERNAMES:\n        result = await arioContract.increaseUndernameLimit(\n          {\n            name: lowerCaseDomain(payload.name),\n            increaseCount: payload.qty,\n          },\n          WRITE_OPTIONS,\n        );\n        functionName = AR_IO_CONTRACT_FUNCTIONS.INCREASE_UNDERNAME_COUNT;\n        break;\n      default:\n        throw new Error(`Unsupported workflow name: ${workflowName}`);\n    }\n  } catch (error) {\n    eventEmitter.emit('error', error);\n  } finally {\n    dispatch({\n      type: 'setSigning',\n      payload: false,\n    });\n  }\n  if (!result) {\n    throw new Error('Failed to dispatch ArIO interaction');\n  }\n\n  if (!functionName) throw new Error('Failed to set workflow name');\n\n  const interaction: ContractInteraction = {\n    deployer: owner.toString(),\n    processId: processId.toString(),\n    id: result.id,\n    payload: {\n      ...payload,\n      function: functionName,\n    },\n    type: 'interaction',\n  };\n\n  dispatch({\n    type: 'setWorkflowName',\n    payload: workflowName,\n  });\n  dispatch({\n    type: 'setInteractionResult',\n    payload: interaction,\n  });\n  return interaction;\n}\n","import { ANT_INTERACTION_TYPES, ARNS_INTERACTION_TYPES } from '@src/types';\n\nexport function getTransactionDescription({\n  workflowName,\n  ...params\n}: {\n  workflowName: ARNS_INTERACTION_TYPES | ANT_INTERACTION_TYPES;\n} & Record<string, any>) {\n  switch (workflowName) {\n    case ARNS_INTERACTION_TYPES.INCREASE_UNDERNAMES:\n      return `Increasing your undernames is paid in ${params.ioTicker} tokens.`;\n    case ARNS_INTERACTION_TYPES.EXTEND_LEASE:\n    case ARNS_INTERACTION_TYPES.BUY_RECORD:\n      return `This includes a registration fee (paid in ${params.ioTicker} tokens).`;\n    default:\n      return undefined;\n  }\n}\n","import { ANT_INTERACTION_TYPES, ARNS_INTERACTION_TYPES } from '@src/types';\n\nexport function getTransactionHeader({\n  workflowName,\n  ...params // eslint-disable-line @typescript-eslint/no-unused-vars\n}: {\n  workflowName: ARNS_INTERACTION_TYPES | ANT_INTERACTION_TYPES;\n} & Record<string, any>) {\n  switch (workflowName) {\n    case ARNS_INTERACTION_TYPES.INCREASE_UNDERNAMES:\n    case ARNS_INTERACTION_TYPES.EXTEND_LEASE:\n      return (\n        <h1\n          className=\"flex white\"\n          style={{ width: '100%', paddingBottom: '30px' }}\n        >\n          Review\n        </h1>\n      );\n    case ARNS_INTERACTION_TYPES.BUY_RECORD:\n      return `Review your Purchase`;\n    default:\n      return undefined;\n  }\n}\n","import { IOWriteable } from '@ar.io/sdk/web';\nimport { ANTCard } from '@src/components/cards';\nimport { InfoIcon } from '@src/components/icons';\nimport WorkflowButtons from '@src/components/inputs/buttons/WorkflowButtons/WorkflowButtons';\nimport TransactionCost from '@src/components/layout/TransactionCost/TransactionCost';\nimport { StepProgressBar } from '@src/components/layout/progress';\nimport PageLoader from '@src/components/layout/progress/PageLoader/PageLoader';\nimport { useIsMobile } from '@src/hooks';\nimport dispatchArIOInteraction from '@src/state/actions/dispatchArIOInteraction';\nimport { useGlobalState } from '@src/state/contexts/GlobalState';\nimport { useTransactionState } from '@src/state/contexts/TransactionState';\nimport { useWalletState } from '@src/state/contexts/WalletState';\nimport {\n  ARNSMapping,\n  ARNS_INTERACTION_TYPES,\n  TransactionData,\n  ValidInteractionType,\n} from '@src/types';\nimport {\n  getARNSMappingByInteractionType,\n  getWorkflowStepsForInteraction,\n} from '@src/utils';\nimport eventEmitter from '@src/utils/events';\nimport { StepProps } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { getTransactionDescription } from './transaction-descriptions';\nimport { getTransactionHeader } from './transaction-headers';\n\n// page on route transaction/review\n// on completion routes to transaction/complete\nfunction TransactionReview() {\n  const navigate = useNavigate();\n  const [{ ioTicker, arioContract, arnsContractId }] = useGlobalState();\n  const [{ walletAddress, wallet }] = useWalletState();\n  const [\n    { workflowName, interactionType, transactionData, interactionResult },\n    dispatchTransactionState,\n  ] = useTransactionState();\n  const isMobile = useIsMobile();\n  const [antProps, setAntProps] = useState<ARNSMapping>();\n  const [steps, setSteps] = useState<StepProps[] | undefined>(\n    getWorkflowStepsForInteraction(interactionType),\n  );\n  const [header, setHeader] = useState<string | JSX.Element | undefined>(\n    getTransactionHeader({\n      workflowName: workflowName as ARNS_INTERACTION_TYPES,\n    }),\n  );\n  const [transactionDescription, setTransactionDescription] = useState(\n    getTransactionDescription({\n      workflowName: workflowName as ARNS_INTERACTION_TYPES,\n      ioTicker,\n    }),\n  );\n\n  useEffect(() => {\n    if (!transactionData && !workflowName) {\n      navigate('/');\n      return;\n    }\n    setAntProps(\n      getARNSMappingByInteractionType({\n        interactionType: interactionType as ValidInteractionType,\n        transactionData: {\n          ...transactionData,\n          deployedTransactionId: interactionResult?.id,\n        } as any as TransactionData,\n      }) as ARNSMapping,\n    );\n    setTransactionDescription(\n      getTransactionDescription({\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n        ioTicker,\n      }),\n    );\n    setSteps(getWorkflowStepsForInteraction(interactionType));\n    setHeader(\n      getTransactionHeader({\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n      }),\n    );\n  }, [\n    transactionData,\n    interactionResult,\n    workflowName,\n    interactionType,\n    walletAddress,\n  ]);\n\n  async function handleNext() {\n    try {\n      if (!(arioContract instanceof IOWriteable)) {\n        throw new Error('Wallet must be connected to dispatch transactions.');\n      }\n      if (!transactionData || !workflowName) {\n        throw new Error('Transaction data is missing');\n      }\n\n      if (!walletAddress) {\n        throw new Error('Wallet address is missing');\n      }\n      // TODO: check that it's connected\n      await dispatchArIOInteraction({\n        arioContract: arioContract,\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n        payload: transactionData,\n        owner: walletAddress,\n        processId: arnsContractId,\n        dispatch: dispatchTransactionState,\n        signer: wallet?.arconnectSigner,\n      });\n\n      navigate('/transaction/complete');\n    } catch (error) {\n      eventEmitter.emit('error', error);\n    }\n  }\n\n  if (!antProps) {\n    return (\n      <PageLoader loading={true} message={'Loading transaction data...'} />\n    );\n  }\n\n  return (\n    <div className=\"page\">\n      <div\n        className=\"flex flex-column center\"\n        style={isMobile ? {} : { gap: '0px', maxWidth: '900px', width: '100%' }}\n      >\n        {steps && steps.length ? (\n          <div\n            className=\"flex flex-row\"\n            style={{\n              marginBottom: '30px',\n              width: '100%',\n            }}\n          >\n            <StepProgressBar stage={3} stages={steps} />\n          </div>\n        ) : (\n          <></>\n        )}\n\n        {typeof header === 'string' ? (\n          <div\n            className=\"flex flex-row text-large white bold center\"\n            style={{\n              height: '100%',\n              padding: '80px 0px',\n              borderTop: steps?.length ? 'solid 1px var(--text-faded)' : '',\n            }}\n          >\n            {header}\n          </div>\n        ) : (\n          header\n        )}\n        <ANTCard {...antProps} bordered compact={false} />\n        <TransactionCost\n          fee={{\n            [ioTicker]: transactionData?.interactionPrice,\n          }}\n          info={\n            transactionDescription && (\n              <div\n                className=\"flex flex-row flex-left\"\n                style={{\n                  gap: '10px',\n                  maxWidth: '50%',\n                  justifyContent: 'flex-start',\n                  alignItems: 'flex-start',\n                }}\n              >\n                <InfoIcon\n                  width={'20px'}\n                  height={'20px'}\n                  fill=\"var(--text-grey)\"\n                />\n                <span\n                  className=\"flex flex-column flex-left grey text\"\n                  style={{ textAlign: 'left', lineHeight: '1.5em' }}\n                >\n                  {transactionDescription}\n                </span>\n              </div>\n            )\n          }\n        />\n        <div\n          className=\"flex\"\n          style={{\n            marginTop: 20,\n            width: '100%',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <WorkflowButtons\n            onNext={() => handleNext()}\n            onBack={() => navigate(-1)}\n            backText={'Back'}\n            nextText={'Confirm'}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TransactionReview;\n"],"names":["spawnANT","signer","module","AOS_MODULE_ID","luaCodeTxId","ANT_LUA_ID","ao","connect","scheduler","DEFAULT_SCHEDULER_ID","state","stateContractTxId","luaString","defaultArweave","processId","AOProcess","aosClient","LUA_CODE_TX_ID","dispatchArIOInteraction","payload","workflowName","owner","arioContract","dispatch","result","functionName","ARNS_INTERACTION_TYPES","name","type","years","antProcessId","buyRecordResult","lowerCaseDomain","AR_IO_CONTRACT_FUNCTIONS","WRITE_OPTIONS","error","eventEmitter","interaction","getTransactionDescription","params","getTransactionHeader","jsxRuntimeExports","TransactionReview","navigate","useNavigate","ioTicker","arnsContractId","useGlobalState","walletAddress","wallet","useWalletState","interactionType","transactionData","interactionResult","dispatchTransactionState","useTransactionState","isMobile","useIsMobile","antProps","setAntProps","reactExports","steps","setSteps","getWorkflowStepsForInteraction","header","setHeader","transactionDescription","setTransactionDescription","getARNSMappingByInteractionType","handleNext","IOWriteable","StepProgressBar","ANTCard","TransactionCost","SvgInfo","WorkflowButtons","PageLoader"],"mappings":"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","x_google_ignoreList":[0]}