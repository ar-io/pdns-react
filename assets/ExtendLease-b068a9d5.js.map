{"version":3,"file":"ExtendLease-b068a9d5.js","sources":["../../src/components/layout/ExtendLease/ExtendLease.tsx"],"sourcesContent":["import {\n  AoArNSLeaseData,\n  isLeasedArNSRecord,\n  mARIOToken,\n} from '@ar.io/sdk/web';\nimport { useCostDetails } from '@src/hooks/useCostDetails';\nimport useDomainInfo from '@src/hooks/useDomainInfo';\nimport Lottie from 'lottie-react';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { ArweaveTransactionID } from '../../../services/arweave/ArweaveTransactionID';\nimport { useGlobalState } from '../../../state/contexts/GlobalState';\nimport { useTransactionState } from '../../../state/contexts/TransactionState';\nimport { useWalletState } from '../../../state/contexts/WalletState';\nimport {\n  ARNS_INTERACTION_TYPES,\n  ExtendLeasePayload,\n  TRANSACTION_TYPES,\n} from '../../../types';\nimport {\n  formatDate,\n  getLeaseDurationFromEndTimestamp,\n  lowerCaseDomain,\n} from '../../../utils';\nimport {\n  MAX_LEASE_DURATION,\n  MIN_LEASE_DURATION,\n  YEAR_IN_MILLISECONDS,\n} from '../../../utils/constants';\nimport { InfoIcon } from '../../icons';\nimport arioLoading from '../../icons/ario-spinner.json';\nimport Counter from '../../inputs/Counter/Counter';\nimport WorkflowButtons from '../../inputs/buttons/WorkflowButtons/WorkflowButtons';\nimport DialogModal from '../../modals/DialogModal/DialogModal';\nimport TransactionCost from '../TransactionCost/TransactionCost';\n\nfunction ExtendLease() {\n  // TODO: remove use of source contract\n  const [{ arioTicker, arioProcessId }] = useGlobalState();\n  const [{ walletAddress }] = useWalletState();\n\n  const [, dispatchTransactionState] = useTransactionState();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const name = location.pathname.split('/').at(-2);\n  const { data: domainData, isLoading: loadingDomainData } = useDomainInfo({\n    domain: name,\n  });\n  const leasedArnsRecord = domainData?.arnsRecord as\n    | undefined\n    | AoArNSLeaseData;\n\n  const [registrationType, setRegistrationType] = useState<TRANSACTION_TYPES>(\n    TRANSACTION_TYPES.LEASE,\n  );\n  const [newLeaseDuration, setNewLeaseDuration] = useState<number>(1);\n  const [maxIncrease, setMaxIncrease] = useState<number>(0);\n  const { data: costDetails, isLoading: loadingCostDetails } = useCostDetails(\n    registrationType === 'permabuy'\n      ? {\n          intent: 'Upgrade-Name',\n          name: name as string,\n          fundFrom: 'any',\n          fromAddress: walletAddress?.toString(),\n        }\n      : {\n          fromAddress: walletAddress?.toString(),\n          intent: 'Extend-Lease',\n          years: newLeaseDuration,\n          type: registrationType?.toString() as any,\n          name: name as string,\n          fundFrom: 'any',\n        },\n  );\n  const arioFee = costDetails?.tokenCost\n    ? new mARIOToken(costDetails.tokenCost).toARIO().valueOf()\n    : undefined;\n\n  const hasInsufficientFunds = costDetails?.fundingPlan\n    ? costDetails.fundingPlan.shortfall > 0\n    : true;\n\n  useEffect(() => {\n    if (!name) {\n      navigate(`/manage/names`);\n      return;\n    }\n    if (domainData?.arnsRecord) {\n      setRegistrationType(domainData.arnsRecord?.type as TRANSACTION_TYPES);\n\n      if (!isLeasedArNSRecord(domainData?.arnsRecord)) {\n        setRegistrationType(TRANSACTION_TYPES.BUY);\n        setMaxIncrease(0);\n        return;\n      } else {\n        setMaxIncrease(\n          Math.max(\n            0,\n            MAX_LEASE_DURATION -\n              getLeaseDurationFromEndTimestamp(\n                domainData.arnsRecord.startTimestamp,\n                domainData.arnsRecord.endTimestamp,\n              ),\n          ),\n        );\n      }\n    }\n  }, [name, domainData]);\n\n  if (domainData?.arnsRecord && !isLeasedArNSRecord(domainData.arnsRecord)) {\n    return (\n      <div className=\"page center\">\n        <DialogModal\n          showClose={false}\n          cancelText=\"Manage\"\n          body={\n            <span\n              className=\"flex flex-column white center\"\n              style={{\n                height: '100%',\n              }}\n            >\n              This domain is permanently registered and its lease cannot be\n              extended.\n            </span>\n          }\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"page center\">\n      <div className=\"flex flex-column\" style={{ maxWidth: '1000px' }}>\n        <div\n          className=\"flex flex-row center\"\n          style={{ justifyContent: 'space-between' }}\n        >\n          <h1 className=\"white text-[2rem]\">Extend Lease</h1>\n\n          <div\n            className=\"flex flex-row center white\"\n            style={{\n              border: 'solid 1px var(--text-faded)',\n              borderRadius: 'var(--corner-radius)',\n              gap: '8px',\n              width: 'fit-content',\n              padding: '12px',\n            }}\n          >\n            <InfoIcon width={'22px'} height={'22px'} fill=\"var(--text-grey)\" />\n            Expiring on{' '}\n            {leasedArnsRecord?.endTimestamp\n              ? formatDate(leasedArnsRecord.endTimestamp)\n              : 'N/A'}\n          </div>\n        </div>{' '}\n        <div\n          className=\"flex flex-row flex-space-between\"\n          style={{ gap: '25px' }}\n        >\n          <button\n            className=\"flex flex-row center text-medium bold pointer\"\n            onClick={() => setRegistrationType(TRANSACTION_TYPES.LEASE)}\n            style={{\n              position: 'relative',\n              background:\n                registrationType === TRANSACTION_TYPES.LEASE\n                  ? 'var(--text-white)'\n                  : '',\n              color:\n                registrationType === TRANSACTION_TYPES.LEASE\n                  ? 'var(--text-black)'\n                  : 'var(--text-white)',\n              border: 'solid 2px var(--text-faded)',\n              borderRadius: 'var(--corner-radius)',\n              height: '56px',\n              borderBottomWidth: '0.5px',\n            }}\n          >\n            Extend Lease{' '}\n            {registrationType === TRANSACTION_TYPES.LEASE ? (\n              <div\n                style={{\n                  position: 'absolute',\n                  bottom: '-6px',\n                  left: '50%',\n                  transform: 'rotate(45deg)',\n                  width: '11px',\n                  height: '11px',\n                  background: 'var(--text-white)',\n                }}\n              ></div>\n            ) : (\n              <></>\n            )}\n          </button>\n          <button\n            className=\"flex flex-row center text-medium bold pointer\"\n            style={{\n              position: 'relative',\n              background:\n                registrationType === TRANSACTION_TYPES.BUY\n                  ? 'var(--text-white)'\n                  : '',\n              color:\n                registrationType === TRANSACTION_TYPES.BUY\n                  ? 'var(--text-black)'\n                  : 'var(--text-white)',\n              border: 'solid 2px var(--text-faded)',\n              borderRadius: 'var(--corner-radius)',\n              height: '56px',\n              borderBottomWidth: '0.5px',\n            }}\n            onClick={() => setRegistrationType(TRANSACTION_TYPES.BUY)}\n          >\n            Permanently Buy{' '}\n            {registrationType === TRANSACTION_TYPES.BUY ? (\n              <div\n                style={{\n                  position: 'absolute',\n                  bottom: -6,\n                  left: '50%',\n                  transform: 'rotate(45deg)',\n                  width: '11px',\n                  height: '11px',\n                  background: 'var(--text-white)',\n                }}\n              ></div>\n            ) : (\n              <></>\n            )}\n          </button>\n        </div>\n        <div className=\"flex flex-col relative p-[30px] w-full h-[200px] bg-foreground box-border rounded-md items-center justify-center \">\n          {registrationType === TRANSACTION_TYPES.LEASE ? (\n            <>\n              {' '}\n              {/* loading overlay */}\n              {loadingDomainData && (\n                <div className=\"flex flex-col items-center justify-center rounded-md bg-foreground h-full w-full absolute top-0 left-0\">\n                  <div className=\"flex flex-row items-center justify-center\">\n                    <Lottie\n                      animationData={arioLoading}\n                      loop={true}\n                      className=\"h-[150px]\"\n                    />\n                  </div>\n                </div>\n              )}\n              {/* maxxed out duration overlay */}\n              {!loadingDomainData && maxIncrease < 1 && (\n                <div className=\"flex flex-col center  rounded-md  bg-[rgb(0,0,0,0.5)] h-full w-full absolute top-0 left-0\">\n                  <div className=\"flex flex-row items-center justify-center max-w-fit h-fit rounded-md border border-error text-white bg-foreground p-6 gap-2\">\n                    {' '}\n                    <InfoIcon\n                      width={'24px'}\n                      height={'24px'}\n                      fill=\"var(--error-red)\"\n                    />\n                    <span className=\"center\">\n                      Maximum lease extension reached\n                    </span>\n                  </div>\n                </div>\n              )}\n              <Counter\n                setValue={setNewLeaseDuration}\n                value={newLeaseDuration}\n                maxValue={maxIncrease}\n                minValue={MIN_LEASE_DURATION}\n                valueName={newLeaseDuration > 1 ? 'years' : 'year'}\n                valueStyle={{ padding: '10px 80px' }}\n                detail={\n                  <span>\n                    until{' '}\n                    {leasedArnsRecord?.endTimestamp\n                      ? formatDate(\n                          leasedArnsRecord?.endTimestamp +\n                            newLeaseDuration * YEAR_IN_MILLISECONDS,\n                        )\n                      : 'N/A'}\n                  </span>\n                }\n                title={\n                  <span\n                    className=\"white\"\n                    style={{ padding: '0px 10px 10px 10px', fontWeight: '500' }}\n                  >{`Extension Duration ( up to ${Math.max(\n                    1,\n                    maxIncrease,\n                  )} year${maxIncrease > 1 ? 's' : ''} )`}</span>\n                }\n              />\n            </>\n          ) : (\n            <div\n              className=\"flex flex-column flex-center\"\n              style={{ gap: '1em' }}\n            >\n              <span className=\"text-medium grey center\">\n                Registration Period\n              </span>\n              <span className=\"text-medium white center\">Permanent</span>\n            </div>\n          )}\n        </div>\n        {/* TODO: [PE-4563] implement contract read api for extend record */}\n        <TransactionCost\n          feeWrapperStyle={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%',\n          }}\n          fee={\n            loadingCostDetails\n              ? { [arioTicker]: undefined }\n              : {\n                  [arioTicker]:\n                    maxIncrease < 1 &&\n                    registrationType === TRANSACTION_TYPES.LEASE\n                      ? 0\n                      : arioFee,\n                }\n          }\n          ioRequired={true}\n        />\n        <WorkflowButtons\n          backText=\"Cancel\"\n          nextText=\"Continue\"\n          customNextStyle={{\n            background:\n              maxIncrease < 1 &&\n              registrationType === TRANSACTION_TYPES.LEASE &&\n              'var(--text-grey)',\n            color:\n              maxIncrease < 1 &&\n              registrationType === TRANSACTION_TYPES.LEASE &&\n              'var(--text-white)',\n          }}\n          onBack={() => {\n            navigate(`/manage/names/${lowerCaseDomain(name!)}`);\n          }}\n          onNext={\n            !arioFee || arioFee <= 0 || hasInsufficientFunds\n              ? undefined\n              : () => {\n                  if (\n                    registrationType === TRANSACTION_TYPES.LEASE &&\n                    domainData?.arnsRecord &&\n                    name\n                  ) {\n                    const payload: ExtendLeasePayload = {\n                      name,\n                      years: newLeaseDuration,\n                      processId: new ArweaveTransactionID(\n                        domainData?.arnsRecord.processId,\n                      ),\n                    };\n\n                    dispatchTransactionState({\n                      type: 'setInteractionType',\n                      payload: ARNS_INTERACTION_TYPES.EXTEND_LEASE,\n                    });\n                    dispatchTransactionState({\n                      type: 'setWorkflowName',\n                      payload: ARNS_INTERACTION_TYPES.EXTEND_LEASE,\n                    });\n                    dispatchTransactionState({\n                      type: 'setTransactionData',\n                      payload: {\n                        assetId: arioProcessId,\n                        functionName: 'extendRecord',\n                        ...payload,\n                        arnsRecord: domainData.arnsRecord,\n                        interactionPrice: arioFee,\n                      },\n                    });\n                  } else if (domainData?.arnsRecord && name) {\n                    dispatchTransactionState({\n                      type: 'setInteractionType',\n                      payload: ARNS_INTERACTION_TYPES.UPGRADE_NAME,\n                    });\n                    dispatchTransactionState({\n                      type: 'setWorkflowName',\n                      payload: ARNS_INTERACTION_TYPES.UPGRADE_NAME,\n                    });\n                    dispatchTransactionState({\n                      type: 'setTransactionData',\n                      payload: {\n                        assetId: arioProcessId,\n                        functionName: 'upgradeName',\n                        name,\n                        processId: new ArweaveTransactionID(\n                          domainData.arnsRecord.processId,\n                        ),\n\n                        arnsRecord: domainData.arnsRecord,\n                        interactionPrice: arioFee,\n                      },\n                    });\n                  }\n\n                  navigate('/transaction/review', {\n                    state: `/manage/names/${lowerCaseDomain(name!)}/extend`,\n                  });\n                }\n          }\n          detail={\n            hasInsufficientFunds ? (\n              <div\n                className=\"flex flex-row center\"\n                style={{\n                  width: 'fit-content',\n                  height: 'fit-content',\n                  borderRadius: 'var(--corner-radius)',\n                  border: 'solid 1px var(--error-red)',\n                  background: '#1D1314',\n                  padding: '8px',\n                  boxSizing: 'border-box',\n                  color: 'var(--error-red)',\n                  gap: '10px',\n                  whiteSpace: 'nowrap',\n                  fontSize: '13px',\n                }}\n              >\n                <InfoIcon\n                  width={'24px'}\n                  height={'24px'}\n                  fill=\"var(--error-red)\"\n                />\n                <span className=\"center\">Insufficient funds.</span>\n              </div>\n            ) : (\n              <></>\n            )\n          }\n        />{' '}\n      </div>\n    </div>\n  );\n}\n\nexport default ExtendLease;\n"],"names":["ExtendLease","arioTicker","arioProcessId","useGlobalState","walletAddress","useWalletState","dispatchTransactionState","useTransactionState","location","useLocation","navigate","useNavigate","name","domainData","loadingDomainData","useDomainInfo","leasedArnsRecord","registrationType","setRegistrationType","reactExports","TRANSACTION_TYPES","newLeaseDuration","setNewLeaseDuration","maxIncrease","setMaxIncrease","costDetails","loadingCostDetails","useCostDetails","arioFee","mARIOToken","hasInsufficientFunds","_a","isLeasedArNSRecord","MAX_LEASE_DURATION","getLeaseDurationFromEndTimestamp","jsxRuntimeExports","DialogModal","SvgInfo","formatDate","Lottie","arioLoading","Counter","MIN_LEASE_DURATION","YEAR_IN_MILLISECONDS","TransactionCost","WorkflowButtons","lowerCaseDomain","payload","ArweaveTransactionID","ARNS_INTERACTION_TYPES"],"mappings":"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"}