import{aE as A,aY as _,aV as q,cu as b,ba as x,bk as Q,cv as L}from"./index-097fdbca.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},o=new Error().stack;o&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[o]="9c9eaec9-5136-4ab9-af85-e1037131f862",e._sentryDebugIdIdentifier="sentry-dbid-9c9eaec9-5136-4ab9-af85-e1037131f862")}catch{}})();function P({domain:e,antId:o}){const[{arioContract:c,ioProcessId:f,aoNetwork:u}]=A(),[{wallet:i}]=_(),{data:p,isLoading:I,isRefetching:h,error:m,refetch:N}=q({queryKey:["domainInfo",{domain:e,antId:o,ioProcessId:f,aoNetwork:u}],queryFn:()=>R({domain:e,antId:o}).catch(n=>n)});async function R({domain:n,antId:d}){if(!n&&!d)throw new Error("No domain or antId provided");const r=n?await c.getArNSRecord({name:x(n)}):void 0;if(!d&&!(r!=null&&r.processId))throw new Error("No ANT id or record found");const a=d||(r==null?void 0:r.processId),l=i==null?void 0:i.arconnectSigner;if(!a)throw new Error("No processId found");const w=Q.init({processId:a,...l!==void 0?{signer:l}:{}}),t=await w.getState();if(!t)throw new Error("State not found for ANT contract");const C=await b.fetchQuery(L({arioContract:c,meta:[f,u.CU_URL]})),S=Object.entries(C).filter(([,s])=>s.processId==a.toString()).map(([s])=>s),{Name:D,Ticker:v,Owner:E,Controllers:T,Records:y}=t,g=y["@"],k=Object.keys(y).filter(s=>s!=="@").length;if(!g)throw new Error("No apexRecord found");return{arnsRecord:r,associatedNames:S,processId:a,antProcess:w,name:D,ticker:v,owner:E,controllers:T,undernameCount:k,apexRecord:g,sourceCodeTxId:t==null?void 0:t["Source-Code-TX-ID"],records:t.Records}}return{data:p,isLoading:I||h,error:m,refetch:()=>{b.invalidateQueries({queryKey:["domainInfo",{domain:e,antId:o}],refetchType:"all"}),N()}}}export{P as u};
//# sourceMappingURL=useDomainInfo-3e76535b.js.map
