{"version":3,"file":"useBreakpoint-b2c53a16.js","sources":["../../node_modules/antd/es/_util/responsiveObserver.js","../../node_modules/antd/es/_util/hooks/useForceUpdate.js","../../node_modules/antd/es/grid/hooks/useBreakpoint.js"],"sourcesContent":["import React from 'react';\nimport { useToken } from '../theme/internal';\nexport const responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst getResponsiveMap = token => ({\n  xs: `(max-width: ${token.screenXSMax}px)`,\n  sm: `(min-width: ${token.screenSM}px)`,\n  md: `(min-width: ${token.screenMD}px)`,\n  lg: `(min-width: ${token.screenLG}px)`,\n  xl: `(min-width: ${token.screenXL}px)`,\n  xxl: `(min-width: ${token.screenXXL}px)`\n});\n/**\n * Ensures that the breakpoints token are valid, in good order\n * For each breakpoint : screenMin <= screen <= screenMax and screenMax <= nextScreenMin\n */\nconst validateBreakpoints = token => {\n  const indexableToken = token;\n  const revBreakpoints = [].concat(responsiveArray).reverse();\n  revBreakpoints.forEach((breakpoint, i) => {\n    const breakpointUpper = breakpoint.toUpperCase();\n    const screenMin = `screen${breakpointUpper}Min`;\n    const screen = `screen${breakpointUpper}`;\n    if (!(indexableToken[screenMin] <= indexableToken[screen])) {\n      throw new Error(`${screenMin}<=${screen} fails : !(${indexableToken[screenMin]}<=${indexableToken[screen]})`);\n    }\n    if (i < revBreakpoints.length - 1) {\n      const screenMax = `screen${breakpointUpper}Max`;\n      if (!(indexableToken[screen] <= indexableToken[screenMax])) {\n        throw new Error(`${screen}<=${screenMax} fails : !(${indexableToken[screen]}<=${indexableToken[screenMax]})`);\n      }\n      const nextBreakpointUpperMin = revBreakpoints[i + 1].toUpperCase();\n      const nextScreenMin = `screen${nextBreakpointUpperMin}Min`;\n      if (!(indexableToken[screenMax] <= indexableToken[nextScreenMin])) {\n        throw new Error(`${screenMax}<=${nextScreenMin} fails : !(${indexableToken[screenMax]}<=${indexableToken[nextScreenMin]})`);\n      }\n    }\n  });\n  return token;\n};\nexport default function useResponsiveObserver() {\n  const [, token] = useToken();\n  const responsiveMap = getResponsiveMap(validateBreakpoints(token));\n  // To avoid repeat create instance, we add `useMemo` here.\n  return React.useMemo(() => {\n    const subscribers = new Map();\n    let subUid = -1;\n    let screens = {};\n    return {\n      matchHandlers: {},\n      dispatch(pointMap) {\n        screens = pointMap;\n        subscribers.forEach(func => func(screens));\n        return subscribers.size >= 1;\n      },\n      subscribe(func) {\n        if (!subscribers.size) this.register();\n        subUid += 1;\n        subscribers.set(subUid, func);\n        func(screens);\n        return subUid;\n      },\n      unsubscribe(paramToken) {\n        subscribers.delete(paramToken);\n        if (!subscribers.size) this.unregister();\n      },\n      unregister() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const handler = this.matchHandlers[matchMediaQuery];\n          handler === null || handler === void 0 ? void 0 : handler.mql.removeListener(handler === null || handler === void 0 ? void 0 : handler.listener);\n        });\n        subscribers.clear();\n      },\n      register() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const listener = _ref => {\n            let {\n              matches\n            } = _ref;\n            this.dispatch(Object.assign(Object.assign({}, screens), {\n              [screen]: matches\n            }));\n          };\n          const mql = window.matchMedia(matchMediaQuery);\n          mql.addListener(listener);\n          this.matchHandlers[matchMediaQuery] = {\n            mql,\n            listener\n          };\n          listener(mql);\n        });\n      },\n      responsiveMap\n    };\n  }, [token]);\n}\nexport const matchScreen = (screens, screenSizes) => {\n  if (screenSizes && typeof screenSizes === 'object') {\n    for (let i = 0; i < responsiveArray.length; i++) {\n      const breakpoint = responsiveArray[i];\n      if (screens[breakpoint] && screenSizes[breakpoint] !== undefined) {\n        return screenSizes[breakpoint];\n      }\n    }\n  }\n};","import * as React from 'react';\nexport default function useForceUpdate() {\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n  return forceUpdate;\n}","\"use client\";\n\nimport { useRef } from 'react';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useForceUpdate from '../../_util/hooks/useForceUpdate';\nimport useResponsiveObserver from '../../_util/responsiveObserver';\nfunction useBreakpoint() {\n  let refreshOnChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const screensRef = useRef({});\n  const forceUpdate = useForceUpdate();\n  const responsiveObserver = useResponsiveObserver();\n  useLayoutEffect(() => {\n    const token = responsiveObserver.subscribe(supportScreens => {\n      screensRef.current = supportScreens;\n      if (refreshOnChange) {\n        forceUpdate();\n      }\n    });\n    return () => responsiveObserver.unsubscribe(token);\n  }, []);\n  return screensRef.current;\n}\nexport default useBreakpoint;"],"names":["responsiveArray","getResponsiveMap","token","validateBreakpoints","indexableToken","revBreakpoints","breakpoint","i","breakpointUpper","screenMin","screen","screenMax","nextScreenMin","useResponsiveObserver","useToken","responsiveMap","React","subscribers","subUid","screens","pointMap","func","paramToken","matchMediaQuery","handler","listener","_ref","matches","mql","matchScreen","screenSizes","useForceUpdate","forceUpdate","reactExports","x","useBreakpoint","refreshOnChange","screensRef","responsiveObserver","useLayoutEffect","supportScreens"],"mappings":"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","x_google_ignoreList":[0,1,2]}