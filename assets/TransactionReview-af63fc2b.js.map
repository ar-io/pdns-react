{"version":3,"file":"TransactionReview-af63fc2b.js","sources":["../../src/state/actions/dispatchArIOInteraction.ts","../../src/components/pages/Transaction/transaction-headers.tsx","../../src/components/pages/Transaction/TransactionReview.tsx"],"sourcesContent":["import {\n  AoIOWrite,\n  AoMessageResult,\n  ContractSigner,\n  createAoSigner,\n  spawnANT,\n} from '@ar.io/sdk/web';\nimport { ArweaveTransactionID } from '@src/services/arweave/ArweaveTransactionID';\nimport { TransactionAction } from '@src/state/reducers/TransactionReducer';\nimport { ARNS_INTERACTION_TYPES, ContractInteraction } from '@src/types';\nimport { lowerCaseDomain } from '@src/utils';\nimport { WRITE_OPTIONS } from '@src/utils/constants';\nimport eventEmitter from '@src/utils/events';\nimport { Dispatch } from 'react';\n\nexport default async function dispatchArIOInteraction({\n  payload,\n  workflowName,\n  owner,\n  arioContract,\n  processId,\n  dispatch,\n  signer,\n}: {\n  payload: Record<string, any>;\n  workflowName: ARNS_INTERACTION_TYPES;\n  owner: ArweaveTransactionID;\n  arioContract?: AoIOWrite;\n  processId: ArweaveTransactionID;\n  dispatch: Dispatch<TransactionAction>;\n  signer?: ContractSigner;\n}): Promise<ContractInteraction> {\n  let result: AoMessageResult | undefined = undefined;\n\n  try {\n    if (!arioContract) throw new Error('ArIO provider is not defined');\n    if (!signer) throw new Error('signer is not defined');\n    dispatch({\n      type: 'setSigning',\n      payload: true,\n    });\n    switch (workflowName) {\n      case ARNS_INTERACTION_TYPES.BUY_RECORD: {\n        const { name, type, years } = payload;\n        let antProcessId: string = payload.processId;\n\n        if (antProcessId === 'atomic') {\n          antProcessId = await spawnANT({\n            state: payload.state,\n            signer: createAoSigner(signer),\n          });\n        }\n\n        const buyRecordResult = await arioContract.buyRecord({\n          name: lowerCaseDomain(name),\n          type,\n          years,\n          processId: antProcessId,\n        });\n\n        payload.processId = antProcessId;\n\n        result = buyRecordResult;\n        break;\n      }\n      case ARNS_INTERACTION_TYPES.EXTEND_LEASE:\n        result = await arioContract.extendLease(\n          {\n            name: lowerCaseDomain(payload.name),\n            years: payload.years,\n          },\n          WRITE_OPTIONS,\n        );\n        break;\n      case ARNS_INTERACTION_TYPES.INCREASE_UNDERNAMES:\n        result = await arioContract.increaseUndernameLimit(\n          {\n            name: lowerCaseDomain(payload.name),\n            increaseCount: payload.qty,\n          },\n          WRITE_OPTIONS,\n        );\n        break;\n      default:\n        throw new Error(`Unsupported workflow name: ${workflowName}`);\n    }\n  } catch (error) {\n    eventEmitter.emit('error', error);\n  } finally {\n    dispatch({\n      type: 'setSigning',\n      payload: false,\n    });\n  }\n  if (!result) {\n    throw new Error('Failed to dispatch ArIO interaction');\n  }\n\n  const interaction: ContractInteraction = {\n    deployer: owner.toString(),\n    processId: processId.toString(),\n    id: result.id,\n    type: 'interaction',\n    payload,\n  };\n\n  dispatch({\n    type: 'setWorkflowName',\n    payload: workflowName,\n  });\n  dispatch({\n    type: 'setInteractionResult',\n    payload: interaction,\n  });\n  return interaction;\n}\n","import { ANT_INTERACTION_TYPES, ARNS_INTERACTION_TYPES } from '@src/types';\n\nexport function getTransactionHeader({\n  workflowName,\n  ...params // eslint-disable-line @typescript-eslint/no-unused-vars\n}: {\n  workflowName: ARNS_INTERACTION_TYPES | ANT_INTERACTION_TYPES;\n} & Record<string, any>) {\n  switch (workflowName) {\n    case ARNS_INTERACTION_TYPES.INCREASE_UNDERNAMES:\n    case ARNS_INTERACTION_TYPES.EXTEND_LEASE:\n      return (\n        <h1\n          className=\"flex white\"\n          style={{ width: '100%', paddingBottom: '30px' }}\n        >\n          Review\n        </h1>\n      );\n    case ARNS_INTERACTION_TYPES.BUY_RECORD:\n      return `Review your Purchase`;\n    default:\n      return undefined;\n  }\n}\n","import { IOWriteable } from '@ar.io/sdk/web';\nimport { ANTCard } from '@src/components/cards';\nimport WarningCard from '@src/components/cards/WarningCard/WarningCard';\nimport { InfoIcon } from '@src/components/icons';\nimport WorkflowButtons from '@src/components/inputs/buttons/WorkflowButtons/WorkflowButtons';\nimport TransactionCost from '@src/components/layout/TransactionCost/TransactionCost';\nimport { StepProgressBar } from '@src/components/layout/progress';\nimport PageLoader from '@src/components/layout/progress/PageLoader/PageLoader';\nimport { useIsMobile } from '@src/hooks';\nimport dispatchArIOInteraction from '@src/state/actions/dispatchArIOInteraction';\nimport { useGlobalState } from '@src/state/contexts/GlobalState';\nimport { useTransactionState } from '@src/state/contexts/TransactionState';\nimport { useWalletState } from '@src/state/contexts/WalletState';\nimport {\n  ARNSMapping,\n  ARNS_INTERACTION_TYPES,\n  TransactionData,\n  ValidInteractionType,\n} from '@src/types';\nimport {\n  getARNSMappingByInteractionType,\n  getWorkflowStepsForInteraction,\n} from '@src/utils';\nimport eventEmitter from '@src/utils/events';\nimport { StepProps } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { getTransactionDescription } from './transaction-descriptions';\nimport { getTransactionHeader } from './transaction-headers';\n\n// page on route transaction/review\n// on completion routes to transaction/complete\nfunction TransactionReview() {\n  const navigate = useNavigate();\n  const [{ ioTicker, arioContract, ioProcessId }] = useGlobalState();\n  const [{ walletAddress, wallet }] = useWalletState();\n  const [\n    { workflowName, interactionType, transactionData, interactionResult },\n    dispatchTransactionState,\n  ] = useTransactionState();\n  const isMobile = useIsMobile();\n  const [antProps, setAntProps] = useState<ARNSMapping>();\n  const [steps, setSteps] = useState<StepProps[] | undefined>(\n    getWorkflowStepsForInteraction(interactionType),\n  );\n  const [header, setHeader] = useState<string | JSX.Element | undefined>(\n    getTransactionHeader({\n      workflowName: workflowName as ARNS_INTERACTION_TYPES,\n    }),\n  );\n  const [transactionDescription, setTransactionDescription] = useState(\n    getTransactionDescription({\n      workflowName: workflowName as ARNS_INTERACTION_TYPES,\n      ioTicker,\n    }),\n  );\n\n  useEffect(() => {\n    if (!transactionData && !workflowName) {\n      navigate('/');\n      return;\n    }\n    setAntProps(\n      getARNSMappingByInteractionType({\n        interactionType: interactionType as ValidInteractionType,\n        transactionData: {\n          ...transactionData,\n          deployedTransactionId: interactionResult?.id,\n        } as any as TransactionData,\n      }) as ARNSMapping,\n    );\n    setTransactionDescription(\n      getTransactionDescription({\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n        ioTicker,\n      }),\n    );\n    setSteps(getWorkflowStepsForInteraction(interactionType));\n    setHeader(\n      getTransactionHeader({\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n      }),\n    );\n  }, [\n    transactionData,\n    interactionResult,\n    workflowName,\n    interactionType,\n    walletAddress,\n  ]);\n\n  async function handleNext() {\n    try {\n      if (!(arioContract instanceof IOWriteable)) {\n        throw new Error('Wallet must be connected to dispatch transactions.');\n      }\n      if (!transactionData || !workflowName) {\n        throw new Error('Transaction data is missing');\n      }\n\n      if (!walletAddress) {\n        throw new Error('Wallet address is missing');\n      }\n      // TODO: check that it's connected\n      await dispatchArIOInteraction({\n        arioContract: arioContract,\n        workflowName: workflowName as ARNS_INTERACTION_TYPES,\n        payload: transactionData,\n        owner: walletAddress,\n        processId: ioProcessId,\n        dispatch: dispatchTransactionState,\n        signer: wallet?.arconnectSigner,\n      });\n\n      navigate('/transaction/complete');\n    } catch (error) {\n      eventEmitter.emit('error', error);\n    }\n  }\n\n  if (!antProps) {\n    return (\n      <PageLoader loading={true} message={'Loading transaction data...'} />\n    );\n  }\n\n  return (\n    <div className=\"page\">\n      <div\n        className=\"flex flex-column center\"\n        style={isMobile ? {} : { gap: '0px', maxWidth: '900px', width: '100%' }}\n      >\n        {steps && steps.length ? (\n          <div\n            className=\"flex flex-row\"\n            style={{\n              marginBottom: '20px',\n              width: '100%',\n            }}\n          >\n            <StepProgressBar stage={3} stages={steps} />\n          </div>\n        ) : (\n          <></>\n        )}\n\n        {typeof header === 'string' ? (\n          <div\n            className=\"flex flex-row text-large white bold center\"\n            style={{\n              height: '100%',\n              padding: '50px 0px',\n              borderTop: steps?.length ? 'solid 1px var(--text-faded)' : '',\n            }}\n          >\n            {header}\n          </div>\n        ) : (\n          header\n        )}\n        <ANTCard {...antProps} bordered compact={true} />\n        <TransactionCost\n          feeWrapperStyle={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%',\n          }}\n          fee={{\n            [ioTicker]: transactionData?.interactionPrice,\n          }}\n          info={\n            transactionDescription && (\n              <div>\n                <WarningCard\n                  wrapperStyle={{\n                    padding: '10px',\n                    fontSize: '14px',\n                    alignItems: 'center',\n                  }}\n                  customIcon={\n                    <InfoIcon width={'20px'} fill={'var(--accent)'} />\n                  }\n                  text={transactionDescription}\n                />\n              </div>\n            )\n          }\n        />\n        <div\n          className=\"flex\"\n          style={{\n            marginTop: 20,\n            width: '100%',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <WorkflowButtons\n            onNext={() => handleNext()}\n            onBack={() => navigate(-1)}\n            backText={'Back'}\n            nextText={'Confirm'}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TransactionReview;\n"],"names":["dispatchArIOInteraction","payload","workflowName","owner","arioContract","processId","dispatch","signer","result","ARNS_INTERACTION_TYPES","name","type","years","antProcessId","spawnANT","createAoSigner","buyRecordResult","lowerCaseDomain","WRITE_OPTIONS","error","eventEmitter","interaction","getTransactionHeader","params","jsxRuntimeExports","TransactionReview","navigate","useNavigate","ioTicker","ioProcessId","useGlobalState","walletAddress","wallet","useWalletState","interactionType","transactionData","interactionResult","dispatchTransactionState","useTransactionState","isMobile","useIsMobile","antProps","setAntProps","reactExports","steps","setSteps","getWorkflowStepsForInteraction","header","setHeader","transactionDescription","setTransactionDescription","getTransactionDescription","getARNSMappingByInteractionType","handleNext","IOWriteable","StepProgressBar","ANTCard","TransactionCost","WarningCard","SvgInfo","WorkflowButtons","PageLoader"],"mappings":"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"}